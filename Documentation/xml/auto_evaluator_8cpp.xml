<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="auto_evaluator_8cpp" kind="file" language="C++">
    <compoundname>autoEvaluator.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes refid="_sample_generation_app_8h" local="no">Utils/SampleGenerationApp.h</includes>
    <includes refid="_own_dataset_reader_8h" local="no">DatasetConverters/readers/OwnDatasetReader.h</includes>
    <includes refid="_mass_inferencer_8h" local="no">FrameworkEvaluator/MassInferencer.h</includes>
    <includes refid="_generic_dataset_reader_8h" local="no">DatasetConverters/readers/GenericDatasetReader.h</includes>
    <includes refid="_generic_inferencer_8h" local="no">FrameworkEvaluator/GenericInferencer.h</includes>
    <includes refid="_detections_evaluator_8h" local="no">FrameworkEvaluator/DetectionsEvaluator.h</includes>
    <includes refid="_stats_writer_8h" local="no">FrameworkEvaluator/StatsWriter.h</includes>
    <includes local="no">boost/filesystem/path.hpp</includes>
    <includes local="no">boost/filesystem/operations.hpp</includes>
    <incdepgraph>
      <node id="5880">
        <label>valarray</label>
      </node>
      <node id="5858">
        <label>boost/property_tree/xml_parser.hpp</label>
      </node>
      <node id="5875">
        <label>GlobalStats.h</label>
        <link refid="_global_stats_8h"/>
        <childnode refid="5838" relation="include">
        </childnode>
        <childnode refid="5870" relation="include">
        </childnode>
      </node>
      <node id="5873">
        <label>functional</label>
      </node>
      <node id="5820">
        <label>iomanip</label>
      </node>
      <node id="5828">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="5855">
        <label>ClassType.h</label>
        <link refid="_class_type_8h"/>
        <childnode refid="5826" relation="include">
        </childnode>
      </node>
      <node id="5822">
        <label>DatasetConverters/readers/OwnDatasetReader.h</label>
        <link refid="_own_dataset_reader_8h"/>
        <childnode refid="5823" relation="include">
        </childnode>
      </node>
      <node id="5845">
        <label>SpinelloDatasetReader.h</label>
        <link refid="_spinello_dataset_reader_8h"/>
        <childnode refid="5823" relation="include">
        </childnode>
      </node>
      <node id="5853">
        <label>boost/filesystem/operations.hpp</label>
      </node>
      <node id="5849">
        <label>rapidjson/prettywriter.h</label>
      </node>
      <node id="5835">
        <label>maskApi.h</label>
        <link refid="mask_api_8h"/>
      </node>
      <node id="5839">
        <label>glog/logging.h</label>
      </node>
      <node id="5863">
        <label>FrameworkEvaluator/GenericInferencer.h</label>
        <link refid="_generic_inferencer_8h"/>
        <childnode refid="5841" relation="include">
        </childnode>
        <childnode refid="5864" relation="include">
        </childnode>
        <childnode refid="5868" relation="include">
        </childnode>
      </node>
      <node id="5833">
        <label>Regions/RleRegions.h</label>
        <link refid="_rle_regions_8h"/>
        <childnode refid="5826" relation="include">
        </childnode>
        <childnode refid="5827" relation="include">
        </childnode>
        <childnode refid="5834" relation="include">
        </childnode>
      </node>
      <node id="5825">
        <label>Regions/RectRegions.h</label>
        <link refid="_rect_regions_8h"/>
        <childnode refid="5826" relation="include">
        </childnode>
        <childnode refid="5827" relation="include">
        </childnode>
        <childnode refid="5829" relation="include">
        </childnode>
        <childnode refid="5830" relation="include">
        </childnode>
      </node>
      <node id="5870">
        <label>ClassStatistics.h</label>
        <link refid="_class_statistics_8h"/>
        <childnode refid="5814" relation="include">
        </childnode>
        <childnode refid="5811" relation="include">
        </childnode>
        <childnode refid="5871" relation="include">
        </childnode>
        <childnode refid="5872" relation="include">
        </childnode>
        <childnode refid="5873" relation="include">
        </childnode>
        <childnode refid="5830" relation="include">
        </childnode>
        <childnode refid="5874" relation="include">
        </childnode>
      </node>
      <node id="5859">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="5816">
        <label>boost/algorithm/string/classification.hpp</label>
      </node>
      <node id="5827">
        <label>Regions.h</label>
        <link refid="_regions_8h"/>
        <childnode refid="5826" relation="include">
        </childnode>
        <childnode refid="5828" relation="include">
        </childnode>
      </node>
      <node id="5872">
        <label>numeric</label>
      </node>
      <node id="5819">
        <label>config/properties.hpp</label>
        <link refid="properties_8hpp"/>
        <childnode refid="5806" relation="include">
        </childnode>
        <childnode refid="5820" relation="include">
        </childnode>
        <childnode refid="5821" relation="include">
        </childnode>
        <childnode refid="5811" relation="include">
        </childnode>
        <childnode refid="5814" relation="include">
        </childnode>
        <childnode refid="5809" relation="include">
        </childnode>
        <childnode refid="5812" relation="include">
        </childnode>
      </node>
      <node id="5826">
        <label>opencv2/opencv.hpp</label>
      </node>
      <node id="5811">
        <label>string</label>
      </node>
      <node id="5867">
        <label>numpy/arrayobject.h</label>
      </node>
      <node id="5836">
        <label>Common/EvalMatrix.h</label>
        <link refid="_eval_matrix_8h"/>
        <childnode refid="5837" relation="include">
        </childnode>
        <childnode refid="5838" relation="include">
        </childnode>
      </node>
      <node id="5838">
        <label>map</label>
      </node>
      <node id="5848">
        <label>rapidjson/document.h</label>
      </node>
      <node id="5831">
        <label>Regions/ContourRegions.h</label>
        <link refid="_contour_regions_8h"/>
        <childnode refid="5826" relation="include">
        </childnode>
        <childnode refid="5827" relation="include">
        </childnode>
        <childnode refid="5832" relation="include">
        </childnode>
      </node>
      <node id="5808">
        <label>config/config.h</label>
        <link refid="config_8h"/>
        <childnode refid="5809" relation="include">
        </childnode>
        <childnode refid="5810" relation="include">
        </childnode>
        <childnode refid="5819" relation="include">
        </childnode>
      </node>
      <node id="5864">
        <label>FrameworkEvaluator/TensorFlowInferencer.h</label>
        <link refid="_tensor_flow_inferencer_8h"/>
        <childnode refid="5841" relation="include">
        </childnode>
        <childnode refid="5865" relation="include">
        </childnode>
        <childnode refid="5866" relation="include">
        </childnode>
        <childnode refid="5867" relation="include">
        </childnode>
        <childnode refid="5814" relation="include">
        </childnode>
      </node>
      <node id="5817">
        <label>fstream</label>
      </node>
      <node id="5861">
        <label>PrincetonDatasetReader.h</label>
        <link refid="_princeton_dataset_reader_8h"/>
        <childnode refid="5823" relation="include">
        </childnode>
      </node>
      <node id="5850">
        <label>rapidjson/stringbuffer.h</label>
      </node>
      <node id="5846">
        <label>YoloDatasetReader.h</label>
        <link refid="_yolo_dataset_reader_8h"/>
        <childnode refid="5823" relation="include">
        </childnode>
      </node>
      <node id="5840">
        <label>FrameworkEvaluator/MassInferencer.h</label>
        <link refid="_mass_inferencer_8h"/>
        <childnode refid="5823" relation="include">
        </childnode>
        <childnode refid="5841" relation="include">
        </childnode>
      </node>
      <node id="5809">
        <label>yaml-cpp/yaml.h</label>
      </node>
      <node id="5854">
        <label>DatasetConverters/ClassTypeGeneric.h</label>
        <link refid="_class_type_generic_8h"/>
        <childnode refid="5855" relation="include">
        </childnode>
      </node>
      <node id="5876">
        <label>DatasetConverters/ClassTypeMapper.h</label>
        <link refid="_class_type_mapper_8h"/>
        <childnode refid="5855" relation="include">
        </childnode>
        <childnode refid="5877" relation="include">
        </childnode>
        <childnode refid="5830" relation="include">
        </childnode>
        <childnode refid="5878" relation="include">
        </childnode>
      </node>
      <node id="5847">
        <label>COCODatasetReader.h</label>
        <link refid="_c_o_c_o_dataset_reader_8h"/>
        <childnode refid="5823" relation="include">
        </childnode>
        <childnode refid="5848" relation="include">
        </childnode>
        <childnode refid="5849" relation="include">
        </childnode>
        <childnode refid="5850" relation="include">
        </childnode>
        <childnode refid="5851" relation="include">
        </childnode>
        <childnode refid="5852" relation="include">
        </childnode>
        <childnode refid="5853" relation="include">
        </childnode>
        <childnode refid="5854" relation="include">
        </childnode>
      </node>
      <node id="5815">
        <label>boost/algorithm/string/split.hpp</label>
      </node>
      <node id="5843">
        <label>boost/date_time/posix_time/posix_time.hpp</label>
      </node>
      <node id="5805">
        <label>DeepLearningSuite/Tools/AutoEvaluator/autoEvaluator.cpp</label>
        <link refid="auto_evaluator_8cpp"/>
        <childnode refid="5806" relation="include">
        </childnode>
        <childnode refid="5807" relation="include">
        </childnode>
        <childnode refid="5822" relation="include">
        </childnode>
        <childnode refid="5840" relation="include">
        </childnode>
        <childnode refid="5844" relation="include">
        </childnode>
        <childnode refid="5863" relation="include">
        </childnode>
        <childnode refid="5869" relation="include">
        </childnode>
        <childnode refid="5881" relation="include">
        </childnode>
        <childnode refid="5852" relation="include">
        </childnode>
        <childnode refid="5853" relation="include">
        </childnode>
      </node>
      <node id="5877">
        <label>Tree.h</label>
        <link refid="_tree_8h"/>
        <childnode refid="5806" relation="include">
        </childnode>
        <childnode refid="5811" relation="include">
        </childnode>
        <childnode refid="5814" relation="include">
        </childnode>
        <childnode refid="5858" relation="include">
        </childnode>
        <childnode refid="5857" relation="include">
        </childnode>
        <childnode refid="5859" relation="include">
        </childnode>
      </node>
      <node id="5842">
        <label>opencv2/imgproc/imgproc.hpp</label>
      </node>
      <node id="5844">
        <label>DatasetConverters/readers/GenericDatasetReader.h</label>
        <link refid="_generic_dataset_reader_8h"/>
        <childnode refid="5811" relation="include">
        </childnode>
        <childnode refid="5845" relation="include">
        </childnode>
        <childnode refid="5846" relation="include">
        </childnode>
        <childnode refid="5847" relation="include">
        </childnode>
        <childnode refid="5856" relation="include">
        </childnode>
        <childnode refid="5860" relation="include">
        </childnode>
        <childnode refid="5823" relation="include">
        </childnode>
        <childnode refid="5822" relation="include">
        </childnode>
        <childnode refid="5861" relation="include">
        </childnode>
        <childnode refid="5862" relation="include">
        </childnode>
      </node>
      <node id="5879">
        <label>tuple</label>
      </node>
      <node id="5807">
        <label>Utils/SampleGenerationApp.h</label>
        <link refid="_sample_generation_app_8h"/>
        <childnode refid="5808" relation="include">
        </childnode>
      </node>
      <node id="5852">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="5834">
        <label>RleRegion.h</label>
        <link refid="_rle_region_8h"/>
        <childnode refid="5828" relation="include">
        </childnode>
        <childnode refid="5835" relation="include">
        </childnode>
      </node>
      <node id="5865">
        <label>boost/python.hpp</label>
      </node>
      <node id="5866">
        <label>Python.h</label>
      </node>
      <node id="5812">
        <label>config/stdutils.hpp</label>
        <link refid="stdutils_8hpp"/>
        <childnode refid="5813" relation="include">
        </childnode>
        <childnode refid="5811" relation="include">
        </childnode>
        <childnode refid="5814" relation="include">
        </childnode>
        <childnode refid="5815" relation="include">
        </childnode>
        <childnode refid="5816" relation="include">
        </childnode>
        <childnode refid="5817" relation="include">
        </childnode>
      </node>
      <node id="5881">
        <label>FrameworkEvaluator/StatsWriter.h</label>
        <link refid="_stats_writer_8h"/>
        <childnode refid="5838" relation="include">
        </childnode>
        <childnode refid="5869" relation="include">
        </childnode>
        <childnode refid="5844" relation="include">
        </childnode>
      </node>
      <node id="5824">
        <label>Common/Sample.h</label>
        <link refid="_sample_8h"/>
        <childnode refid="5825" relation="include">
        </childnode>
        <childnode refid="5831" relation="include">
        </childnode>
        <childnode refid="5833" relation="include">
        </childnode>
      </node>
      <node id="5862">
        <label>SamplesReader.h</label>
        <link refid="_samples_reader_8h"/>
        <childnode refid="5823" relation="include">
        </childnode>
      </node>
      <node id="5814">
        <label>vector</label>
      </node>
      <node id="5860">
        <label>ImageNetDatasetReader.h</label>
        <link refid="_image_net_dataset_reader_8h"/>
        <childnode refid="5823" relation="include">
        </childnode>
        <childnode refid="5857" relation="include">
        </childnode>
        <childnode refid="5858" relation="include">
        </childnode>
        <childnode refid="5852" relation="include">
        </childnode>
        <childnode refid="5853" relation="include">
        </childnode>
        <childnode refid="5859" relation="include">
        </childnode>
      </node>
      <node id="5837">
        <label>Matrix.h</label>
        <link refid="_matrix_8h"/>
        <childnode refid="5814" relation="include">
        </childnode>
      </node>
      <node id="5821">
        <label>sstream</label>
      </node>
      <node id="5868">
        <label>FrameworkEvaluator/KerasInferencer.h</label>
        <link refid="_keras_inferencer_8h"/>
        <childnode refid="5841" relation="include">
        </childnode>
        <childnode refid="5865" relation="include">
        </childnode>
        <childnode refid="5866" relation="include">
        </childnode>
        <childnode refid="5867" relation="include">
        </childnode>
        <childnode refid="5814" relation="include">
        </childnode>
      </node>
      <node id="5832">
        <label>ContourRegion.h</label>
        <link refid="_contour_region_8h"/>
        <childnode refid="5826" relation="include">
        </childnode>
        <childnode refid="5828" relation="include">
        </childnode>
      </node>
      <node id="5813">
        <label>cstdlib</label>
      </node>
      <node id="5857">
        <label>boost/property_tree/ptree.hpp</label>
      </node>
      <node id="5806">
        <label>iostream</label>
      </node>
      <node id="5856">
        <label>PascalVOCDatasetReader.h</label>
        <link refid="_pascal_v_o_c_dataset_reader_8h"/>
        <childnode refid="5823" relation="include">
        </childnode>
        <childnode refid="5857" relation="include">
        </childnode>
        <childnode refid="5858" relation="include">
        </childnode>
        <childnode refid="5852" relation="include">
        </childnode>
        <childnode refid="5853" relation="include">
        </childnode>
        <childnode refid="5859" relation="include">
        </childnode>
      </node>
      <node id="5878">
        <label>unordered_map</label>
      </node>
      <node id="5851">
        <label>rapidjson/error/en.h</label>
      </node>
      <node id="5810">
        <label>config/loader.hpp</label>
        <link refid="loader_8hpp"/>
        <childnode refid="5806" relation="include">
        </childnode>
        <childnode refid="5811" relation="include">
        </childnode>
        <childnode refid="5812" relation="include">
        </childnode>
        <childnode refid="5809" relation="include">
        </childnode>
        <childnode refid="5818" relation="include">
        </childnode>
        <childnode refid="5819" relation="include">
        </childnode>
      </node>
      <node id="5841">
        <label>FrameworkEvaluator/FrameworkInferencer.h</label>
        <link refid="_framework_inferencer_8h"/>
        <childnode refid="5826" relation="include">
        </childnode>
        <childnode refid="5842" relation="include">
        </childnode>
        <childnode refid="5828" relation="include">
        </childnode>
        <childnode refid="5824" relation="include">
        </childnode>
        <childnode refid="5843" relation="include">
        </childnode>
        <childnode refid="5830" relation="include">
        </childnode>
      </node>
      <node id="5829">
        <label>RectRegion.h</label>
        <link refid="_rect_region_8h"/>
        <childnode refid="5826" relation="include">
        </childnode>
      </node>
      <node id="5823">
        <label>DatasetConverters/readers/DatasetReader.h</label>
        <link refid="_dataset_reader_8h"/>
        <childnode refid="5811" relation="include">
        </childnode>
        <childnode refid="5824" relation="include">
        </childnode>
        <childnode refid="5828" relation="include">
        </childnode>
        <childnode refid="5836" relation="include">
        </childnode>
        <childnode refid="5839" relation="include">
        </childnode>
      </node>
      <node id="5874">
        <label>type_traits</label>
      </node>
      <node id="5871">
        <label>set</label>
      </node>
      <node id="5830">
        <label>algorithm</label>
      </node>
      <node id="5869">
        <label>FrameworkEvaluator/DetectionsEvaluator.h</label>
        <link refid="_detections_evaluator_8h"/>
        <childnode refid="5823" relation="include">
        </childnode>
        <childnode refid="5828" relation="include">
        </childnode>
        <childnode refid="5870" relation="include">
        </childnode>
        <childnode refid="5875" relation="include">
        </childnode>
        <childnode refid="5876" relation="include">
        </childnode>
        <childnode refid="5836" relation="include">
        </childnode>
        <childnode refid="5879" relation="include">
        </childnode>
        <childnode refid="5880" relation="include">
        </childnode>
      </node>
      <node id="5818">
        <label>yaml-cpp/exceptions.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_my_app" prot="public">MyApp</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="auto_evaluator_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DeepLearningSuite/Tools/AutoEvaluator/autoEvaluator.cpp" line="176" column="1" bodyfile="DeepLearningSuite/Tools/AutoEvaluator/autoEvaluator.cpp" bodystart="176" bodyend="182"/>
        <references refid="class_sample_generation_app_1acec58569149ac1fc8af9525d35b9e88a" compoundref="_sample_generation_app_8cpp" startline="90" endline="93">SampleGenerationApp::process</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_sample_generation_app_8h" kindref="compound">Utils/SampleGenerationApp.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_own_dataset_reader_8h" kindref="compound">DatasetConverters/readers/OwnDatasetReader.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_mass_inferencer_8h" kindref="compound">FrameworkEvaluator/MassInferencer.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_generic_dataset_reader_8h" kindref="compound">DatasetConverters/readers/GenericDatasetReader.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_generic_inferencer_8h" kindref="compound">FrameworkEvaluator/GenericInferencer.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_detections_evaluator_8h" kindref="compound">FrameworkEvaluator/DetectionsEvaluator.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_stats_writer_8h" kindref="compound">FrameworkEvaluator/StatsWriter.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/filesystem/path.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/filesystem/operations.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_my_app" kindref="compound">MyApp</ref>:</highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_sample_generation_app" kindref="compound">SampleGenerationApp</ref>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14" refid="class_my_app_1a2cedcf8942b99702d5e26db7d07ff57b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_my_app_1a2cedcf8942b99702d5e26db7d07ff57b" kindref="member">MyApp</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_sample_generation_app_1af98f6187cc8eb62fc3fe0ff53df76b6e" kindref="member">argc</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_sample_generation_app_1a7e490e3711491c2bc58351f9e9dd9945" kindref="member">argv</ref>[]):<ref refid="class_sample_generation_app" kindref="compound">SampleGenerationApp</ref>(argc,argv){</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_sample_generation_app_1a1dae733636d90e8b5d27002cf513e59a" kindref="member">requiredArguments</ref>.push_back(</highlight><highlight class="stringliteral">&quot;Datasets.inputPath&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_sample_generation_app_1a1dae733636d90e8b5d27002cf513e59a" kindref="member">requiredArguments</ref>.push_back(</highlight><highlight class="stringliteral">&quot;Datasets.readerImplementation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_sample_generation_app_1a1dae733636d90e8b5d27002cf513e59a" kindref="member">requiredArguments</ref>.push_back(</highlight><highlight class="stringliteral">&quot;Datasets.readerNames&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_sample_generation_app_1a1dae733636d90e8b5d27002cf513e59a" kindref="member">requiredArguments</ref>.push_back(</highlight><highlight class="stringliteral">&quot;Inferencers.inferencerImplementation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_sample_generation_app_1a1dae733636d90e8b5d27002cf513e59a" kindref="member">requiredArguments</ref>.push_back(</highlight><highlight class="stringliteral">&quot;Inferencers.inferencerConfig&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_sample_generation_app_1a1dae733636d90e8b5d27002cf513e59a" kindref="member">requiredArguments</ref>.push_back(</highlight><highlight class="stringliteral">&quot;Inferencers.inferencerWeights&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_sample_generation_app_1a1dae733636d90e8b5d27002cf513e59a" kindref="member">requiredArguments</ref>.push_back(</highlight><highlight class="stringliteral">&quot;Inferencers.inferencerNames&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_sample_generation_app_1a1dae733636d90e8b5d27002cf513e59a" kindref="member">requiredArguments</ref>.push_back(</highlight><highlight class="stringliteral">&quot;Inferencers.iouType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_sample_generation_app_1a1dae733636d90e8b5d27002cf513e59a" kindref="member">requiredArguments</ref>.push_back(</highlight><highlight class="stringliteral">&quot;outputCSVPath&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*this-&gt;requiredArguments.push_back(&quot;readerImplementationGT&quot;);</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;requiredArguments.push_back(&quot;readerImplementationDetection&quot;);</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;requiredArguments.push_back(&quot;readerNames&quot;);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_my_app_1a376d7e3ddb7ab21223f29a7263b6fb14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_my_app_1a376d7e3ddb7ab21223f29a7263b6fb14" kindref="member">operator()</ref>(){</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YAML::Node<sp/>datasetsNode=this-&gt;<ref refid="class_sample_generation_app_1a4123900b02b2c4d61e9425d9b35da2f2" kindref="member">config</ref>.<ref refid="class_config_1_1_properties_1abb18930b0431bd89e85ed0a5b9b7cac3" kindref="member">getNode</ref>(</highlight><highlight class="stringliteral">&quot;Datasets&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YAML::Node<sp/>inferencersNode=this-&gt;<ref refid="class_sample_generation_app_1a4123900b02b2c4d61e9425d9b35da2f2" kindref="member">config</ref>.<ref refid="class_config_1_1_properties_1abb18930b0431bd89e85ed0a5b9b7cac3" kindref="member">getNode</ref>(</highlight><highlight class="stringliteral">&quot;Inferencers&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*YAML::Node<sp/>readerImplementationNode<sp/>=<sp/>this-&gt;config.getNode(&quot;readerImplementation&quot;);</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YAML::Node<sp/>infererImplementationNode<sp/>=<sp/>this-&gt;config.getNode(&quot;inferencerImplementation&quot;);</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YAML::Node<sp/>inferencerConfigNode<sp/>=<sp/>this-&gt;config.getNode(&quot;inferencerConfig&quot;);</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YAML::Node<sp/>inferencerWeightsNode<sp/>=<sp/>this-&gt;config.getNode(&quot;inferencerWeights&quot;);</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YAML::Node<sp/>inferencerNamesNode<sp/>=<sp/>this-&gt;config.getNode(&quot;inferencerNames&quot;);</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YAML::Node<sp/>readerNamesNode<sp/>=<sp/>this-&gt;config.getNode(&quot;readerNames&quot;);</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YAML::Node<sp/>outputCSVNode<sp/>=<sp/>this-&gt;<ref refid="class_sample_generation_app_1a4123900b02b2c4d61e9425d9b35da2f2" kindref="member">config</ref>.<ref refid="class_config_1_1_properties_1abb18930b0431bd89e85ed0a5b9b7cac3" kindref="member">getNode</ref>(</highlight><highlight class="stringliteral">&quot;outputCSVPath&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outputCSVNode.IsSequence())</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;Provided<sp/>&apos;outputCSVPath&apos;<sp/>must<sp/>be<sp/>a<sp/>single<sp/>Directory,<sp/>not<sp/>multiple&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>boostPath=<sp/><ref refid="namespaceload_image_1a2d12fe0487467ded88b6007624cbe6c7" kindref="member">boost::filesystem::path</ref>(outputCSVNode.as&lt;std::string&gt;());</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boost::filesystem::exists(boostPath))<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!boost::filesystem::is_directory(boostPath))<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;Provided<sp/>&apos;outputCSVPath&apos;<sp/>must<sp/>be<sp/>a<sp/>Directory,<sp/>not<sp/>a<sp/>file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::filesystem::create_directories(boostPath);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*std::vector&lt;std::string&gt;<sp/>inputPaths<sp/>=<sp/>inputPathsNode.IsSequence()</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>inputPathsNode.as&lt;std::vector&lt;std::string&gt;&gt;()</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>std::vector&lt;std::string&gt;(1,<sp/>inputPathsNode.as&lt;std::string&gt;());</highlight></codeline>
<codeline lineno="59"><highlight class="comment"></highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>inferencerWeights<sp/>=<sp/>inferencerWeightsNode.IsSequence()</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>inferencerWeightsNode.as&lt;std::vector&lt;std::string&gt;&gt;()</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>std::vector&lt;std::string&gt;(1,<sp/>inferencerWeightsNode.as&lt;std::string&gt;());</highlight></codeline>
<codeline lineno="63"><highlight class="comment"></highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_generic_dataset_reader_8h_1aee69804c49b311360ba65543d4111f58" kindref="member">GenericDatasetReaderPtr</ref><sp/>reader;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>datasetsNode.begin();<sp/>it<sp/>!=<sp/>datasetsNode.end();<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!((*it)[</highlight><highlight class="stringliteral">&quot;inputPath&quot;</highlight><highlight class="normal">]<sp/>&amp;&amp;<sp/>(*it)[</highlight><highlight class="stringliteral">&quot;readerNames&quot;</highlight><highlight class="normal">]<sp/>&amp;&amp;<sp/>(*it)[</highlight><highlight class="stringliteral">&quot;readerImplementation&quot;</highlight><highlight class="normal">]))</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>Config<sp/>file,<sp/>Error<sp/>Detected<sp/>in<sp/>Datasets<sp/>Configuration&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>inputPath<sp/>=<sp/>(*it)[</highlight><highlight class="stringliteral">&quot;inputPath&quot;</highlight><highlight class="normal">].as&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>readerNames<sp/>=<sp/>(*it)[</highlight><highlight class="stringliteral">&quot;readerNames&quot;</highlight><highlight class="normal">].as&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>readerImplementation<sp/>=<sp/>(*it)[</highlight><highlight class="stringliteral">&quot;readerImplementation&quot;</highlight><highlight class="normal">].as&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader<sp/>=<sp/><ref refid="_generic_dataset_reader_8h_1aee69804c49b311360ba65543d4111f58" kindref="member">GenericDatasetReaderPtr</ref>(</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_generic_dataset_reader" kindref="compound">GenericDatasetReader</ref>(inputPath,<sp/>readerNames,<sp/>readerImplementation,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>mywriterFile(outputCSVNode.as&lt;std::string&gt;()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/Dataset&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(++count)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.csv&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stats_writer" kindref="compound">StatsWriter</ref><sp/>writer(reader-&gt;getReader(),<sp/>mywriterFile);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter<sp/>=<sp/>inferencersNode.begin();<sp/>iter<sp/>!=<sp/>inferencersNode.end();<sp/>iter++)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_dataset_reader_8h_1a30d89cba514a220d64d04535c0465f1c" kindref="member">DatasetReaderPtr</ref><sp/>readerDetection<sp/>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_dataset_reader" kindref="compound">DatasetReader</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!((*iter)[</highlight><highlight class="stringliteral">&quot;inferencerConfig&quot;</highlight><highlight class="normal">]<sp/>&amp;&amp;<sp/>(*iter)[</highlight><highlight class="stringliteral">&quot;inferencerNames&quot;</highlight><highlight class="normal">]<sp/>&amp;&amp;<sp/>(*iter)[</highlight><highlight class="stringliteral">&quot;inferencerImplementation&quot;</highlight><highlight class="normal">]))</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>Config<sp/>file,<sp/>Error<sp/>Detected<sp/>in<sp/>Datasets<sp/>Configuration&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>inferencerConfig<sp/>=<sp/>(*iter)[</highlight><highlight class="stringliteral">&quot;inferencerConfig&quot;</highlight><highlight class="normal">].as&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>inferencerNames<sp/>=<sp/>(*iter)[</highlight><highlight class="stringliteral">&quot;inferencerNames&quot;</highlight><highlight class="normal">].as&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>inferencerWeights<sp/>=<sp/>(*iter)[</highlight><highlight class="stringliteral">&quot;inferencerWeights&quot;</highlight><highlight class="normal">].as&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>inferencerImplementation<sp/>=<sp/>(*iter)[</highlight><highlight class="stringliteral">&quot;inferencerImplementation&quot;</highlight><highlight class="normal">].as&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>inferencerIouType<sp/>=<sp/>(*iter)[</highlight><highlight class="stringliteral">&quot;iouType&quot;</highlight><highlight class="normal">].as&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isIouTypeBbox;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inferencerIouType<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;segm&quot;</highlight><highlight class="normal"><sp/>||<sp/>inferencerIouType<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;bbox&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isIouTypeBbox<sp/>=<sp/>inferencerIouType<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;bbox&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;Evaluation<sp/>iouType<sp/>can<sp/>either<sp/>be<sp/>&apos;segm&apos;<sp/>or<sp/>&apos;bbox&apos;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useDepth<sp/>=<sp/>(*iter)[</highlight><highlight class="stringliteral">&quot;useDepth&quot;</highlight><highlight class="normal">]<sp/>?<sp/>(*iter)[</highlight><highlight class="stringliteral">&quot;useDepth&quot;</highlight><highlight class="normal">].as&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;()<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;getReader()-&gt;resetReaderCounter();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_generic_inferencer_8h_1a0b4fe59ccf0904bfb2ba6172108a3491" kindref="member">GenericInferencerPtr</ref><sp/>inferencer(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_generic_inferencer" kindref="compound">GenericInferencer</ref>(inferencerConfig,<sp/>inferencerWeights,<sp/>inferencerNames,<sp/>inferencerImplementation));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_mass_inferencer" kindref="compound">MassInferencer</ref><sp/>massInferencer(reader-&gt;getReader(),inferencer-&gt;getInferencer(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>massInferencer.<ref refid="class_mass_inferencer_1a64197fd7172177a03d5e87f5dbf37dc3" kindref="member">process</ref>(useDepth,<sp/>readerDetection);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*std::vector&lt;Sample&gt;::iterator<sp/>iter;</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>samples.size()<sp/>&lt;&lt;<sp/>&apos;\n&apos;;</highlight></codeline>
<codeline lineno="131"><highlight class="comment"></highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(iter<sp/>=<sp/>samples.begin();<sp/>iter<sp/>!=<sp/>samples.end();<sp/>iter++)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RectRegionsPtr<sp/>myrectregions<sp/>=<sp/>iter-&gt;getRectRegions();</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;RectRegion&gt;<sp/>vec_regions<sp/>=<sp/>myrectregions-&gt;getRegions();</highlight></codeline>
<codeline lineno="135"><highlight class="comment"></highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>it<sp/>=<sp/>vec_regions.begin(),<sp/>end=<sp/>vec_regions.end();<sp/>it<sp/>!=<sp/>end;<sp/>++it){</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;ClassID:<sp/>&quot;<sp/>&lt;&lt;<sp/>it-&gt;classID.c_str()<sp/>&lt;&lt;<sp/>&apos;\n&apos;;</highlight></codeline>
<codeline lineno="138"><highlight class="comment"></highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="comment"></highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;getReader()-&gt;resetReaderCounter();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GenericDatasetReaderPtr<sp/>readerGT(new<sp/>GenericDatasetReader(inputPathGT.as&lt;std::string&gt;(),readerNamesNode.as&lt;std::string&gt;(),<sp/>readerImplementationGTNode.as&lt;std::string&gt;()));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_detections_evaluator_8h_1ad123715cbea5e203556b7efa1ec44d77" kindref="member">DetectionsEvaluatorPtr</ref><sp/>evaluator(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_detections_evaluator" kindref="compound">DetectionsEvaluator</ref>(reader-&gt;getReader(),readerDetection,</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evaluator-&gt;evaluate(isIouTypeBbox);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evaluator-&gt;accumulateResults();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Extract<sp/>weights<sp/>name<sp/>with<sp/>folder*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="namespaceload_image_1a2d12fe0487467ded88b6007624cbe6c7" kindref="member">path</ref><sp/>=<sp/>inferencerWeights;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>a<sp/>=<sp/><sp/>path.find_last_of(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>b<sp/>=<sp/><sp/>path.substr(0,<sp/>a).find_last_of(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/><sp/>path.find_last_of(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer.writeInferencerResults(path.substr(b<sp/>+<sp/>1,<sp/>a<sp/>-<sp/>(b+1)),<sp/>evaluator);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count2++;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer.saveFile();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="172"><highlight class="normal">};</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="auto_evaluator_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="auto_evaluator_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_sample_generation_app_1af98f6187cc8eb62fc3fe0ff53df76b6e" kindref="member">argc</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_sample_generation_app_1a7e490e3711491c2bc58351f9e9dd9945" kindref="member">argv</ref>[])<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_my_app" kindref="compound">MyApp</ref><sp/>myApp(argc,argv);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>myApp.<ref refid="class_sample_generation_app_1acec58569149ac1fc8af9525d35b9e88a" kindref="member">process</ref>();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Auto<sp/>Evaluation<sp/>Successfull&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="DeepLearningSuite/Tools/AutoEvaluator/autoEvaluator.cpp"/>
  </compounddef>
</doxygen>
