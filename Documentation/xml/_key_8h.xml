<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_key_8h" kind="file" language="C++">
    <compoundname>Key.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includedby refid="_configuration_8h" local="yes">DeepLearningSuite/DeepLearningSuiteLib/Utils/Configuration.h</includedby>
    <includedby refid="_key_8cpp" local="yes">DeepLearningSuite/DeepLearningSuiteLib/Utils/Key.cpp</includedby>
    <incdepgraph>
      <node id="4881">
        <label>string</label>
      </node>
      <node id="4882">
        <label>vector</label>
      </node>
      <node id="4880">
        <label>DeepLearningSuite/DeepLearningSuiteLib/Utils/Key.h</label>
        <link refid="_key_8h"/>
        <childnode refid="4881" relation="include">
        </childnode>
        <childnode refid="4882" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4884">
        <label>DeepLearningSuite/DeepLearningSuiteLib/Utils/Configuration.h</label>
        <link refid="_configuration_8h"/>
        <childnode refid="4885" relation="include">
        </childnode>
        <childnode refid="4887" relation="include">
        </childnode>
      </node>
      <node id="4888">
        <label>DeepLearningSuite/DeepLearningSuiteLib/Utils/Key.cpp</label>
        <link refid="_key_8cpp"/>
      </node>
      <node id="4883">
        <label>DeepLearningSuite/DeepLearningSuiteLib/Utils/Key.h</label>
        <link refid="_key_8h"/>
        <childnode refid="4884" relation="include">
        </childnode>
        <childnode refid="4888" relation="include">
        </childnode>
      </node>
      <node id="4887">
        <label>DeepLearningSuite/DeepLearningSuiteLib/Utils/Configuration.cpp</label>
        <link refid="_configuration_8cpp"/>
      </node>
      <node id="4885">
        <label>DeepLearningSuite/DatasetEvaluationApp/gui/TabHandler.h</label>
        <link refid="_tab_handler_8h"/>
        <childnode refid="4886" relation="include">
        </childnode>
      </node>
      <node id="4886">
        <label>DeepLearningSuite/DatasetEvaluationApp/gui/TabHandler.cpp</label>
        <link refid="_tab_handler_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_key" prot="public">Key</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>frivas<sp/>on<sp/>4/02/17.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SAMPLERGENERATOR_KEY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SAMPLERGENERATOR_KEY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="struct_key" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_key" kindref="compound">Key</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_key_1a22e51dbebb18c1d33ee8bba93a1b3b4d" kindref="member">Key</ref>();</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="struct_key_1a22e51dbebb18c1d33ee8bba93a1b3b4d" kindref="member">Key</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_key_1a23777b784264c6498efaa593bc29f48a" kindref="member">isVector</ref>();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_key_1a8818b63b35d22713f32dc52a17c9b9a4" kindref="member">addValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>value);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="struct_key_1aefe1fbf42b37b3559561945a78c7511c" kindref="member">getValue</ref>();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="struct_key_1a7a1b140dc635e6227516e8abdecba16c" kindref="member">getKey</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="struct_key_1aefe1fbf42b37b3559561945a78c7511c" kindref="member">getValue</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="struct_key_1a74d0f7686b859dabde58e729cf9f7b41" kindref="member">getValueOrLast</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>last<sp/>value<sp/>if<sp/>id<sp/>overflows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="struct_key_1ac97e2bba994c9571e32083e1fb91c4f5" kindref="member">getValues</ref>();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_key_1a0633f6b820d00b10167344ca8796c26d" kindref="member">getValueAsInt</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_key_1a2164f5d7ff7dc435477fdab178f5557a" kindref="member">getNValues</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>key;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>values;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>valid;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//SAMPLERGENERATOR_KEY_H</highlight></codeline>
    </programlisting>
    <location file="DeepLearningSuite/DeepLearningSuiteLib/Utils/Key.h"/>
  </compounddef>
</doxygen>
