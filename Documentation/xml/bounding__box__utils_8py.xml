<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="bounding__box__utils_8py" kind="file" language="Python">
    <compoundname>bounding_box_utils.py</compoundname>
    <innernamespace refid="namespacekeras__utils_1_1bounding__box__utils">keras_utils::bounding_box_utils</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacekeras__utils_1_1bounding__box__utils" refkind="compound"><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral">Includes:</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral">*<sp/>Function<sp/>to<sp/>compute<sp/>the<sp/>IoU<sp/>similarity<sp/>for<sp/>axis-aligned,<sp/>rectangular,<sp/>2D<sp/>bounding<sp/>boxes</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral">*<sp/>Function<sp/>for<sp/>coordinate<sp/>conversion<sp/>for<sp/>axis-aligned,<sp/>rectangular,<sp/>2D<sp/>bounding<sp/>boxes</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral">Copyright<sp/>(C)<sp/>2017<sp/>Pierluigi<sp/>Ferrari</highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral">This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral">This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral">along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral">&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>division</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="namespacekeras__utils_1_1bounding__box__utils_1a7b2a9d86d4acfcddcec55133486f2012" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacekeras__utils_1_1bounding__box__utils_1a7b2a9d86d4acfcddcec55133486f2012" kindref="member">convert_coordinates</ref>(tensor,<sp/>start_index,<sp/>conversion):</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Convert<sp/>coordinates<sp/>for<sp/>axis-aligned<sp/>2D<sp/>boxes<sp/>between<sp/>two<sp/>coordinate<sp/>formats.</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Creates<sp/>a<sp/>copy<sp/>of<sp/>`tensor`,<sp/>i.e.<sp/>does<sp/>not<sp/>operate<sp/>in<sp/>place.<sp/>Currently<sp/>there<sp/>are</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>three<sp/>supported<sp/>coordinate<sp/>formats<sp/>that<sp/>can<sp/>be<sp/>converted<sp/>from<sp/>and<sp/>to<sp/>each<sp/>other:</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1)<sp/>(xmin,<sp/>xmax,<sp/>ymin,<sp/>ymax)<sp/>-<sp/>the<sp/>&apos;minmax&apos;<sp/>format</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2)<sp/>(xmin,<sp/>ymin,<sp/>xmax,<sp/>ymax)<sp/>-<sp/>the<sp/>&apos;corners&apos;<sp/>format</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2)<sp/>(cx,<sp/>cy,<sp/>w,<sp/>h)<sp/>-<sp/>the<sp/>&apos;centroids&apos;<sp/>format</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Arguments:</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor<sp/>(array):<sp/>A<sp/>Numpy<sp/>nD<sp/>array<sp/>containing<sp/>the<sp/>four<sp/>consecutive<sp/>coordinates</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>be<sp/>converted<sp/>somewhere<sp/>in<sp/>the<sp/>last<sp/>axis.</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_index<sp/>(int):<sp/>The<sp/>index<sp/>of<sp/>the<sp/>first<sp/>coordinate<sp/>in<sp/>the<sp/>last<sp/>axis<sp/>of<sp/>`tensor`.</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conversion<sp/>(str,<sp/>optional):<sp/>The<sp/>conversion<sp/>direction.<sp/>Can<sp/>be<sp/>&apos;minmax2centroids&apos;,</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;centroids2minmax&apos;,<sp/>&apos;corners2centroids&apos;,<sp/>&apos;centroids2corners&apos;,<sp/>&apos;minmax2corners&apos;,</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>&apos;corners2minmax&apos;.</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>Numpy<sp/>nD<sp/>array,<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>input<sp/>tensor<sp/>with<sp/>the<sp/>converted<sp/>coordinates</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>place<sp/>of<sp/>the<sp/>original<sp/>coordinates<sp/>and<sp/>the<sp/>unaltered<sp/>elements<sp/>of<sp/>the<sp/>original</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor<sp/>elsewhere.</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>ind<sp/>=<sp/>start_index</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>tensor1<sp/>=<sp/>np.copy(tensor).astype(np.float)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>conversion<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;minmax2centroids&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor1[...,<sp/>ind]<sp/>=<sp/>(tensor[...,<sp/>ind]<sp/>+<sp/>tensor[...,<sp/>ind+1])<sp/>/<sp/>2.0<sp/></highlight><highlight class="comment">#<sp/>Set<sp/>cx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor1[...,<sp/>ind+1]<sp/>=<sp/>(tensor[...,<sp/>ind+2]<sp/>+<sp/>tensor[...,<sp/>ind+3])<sp/>/<sp/>2.0<sp/></highlight><highlight class="comment">#<sp/>Set<sp/>cy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor1[...,<sp/>ind+2]<sp/>=<sp/>tensor[...,<sp/>ind+1]<sp/>-<sp/>tensor[...,<sp/>ind]<sp/></highlight><highlight class="comment">#<sp/>Set<sp/>w</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor1[...,<sp/>ind+3]<sp/>=<sp/>tensor[...,<sp/>ind+3]<sp/>-<sp/>tensor[...,<sp/>ind+2]<sp/></highlight><highlight class="comment">#<sp/>Set<sp/>h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>conversion<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;centroids2minmax&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor1[...,<sp/>ind]<sp/>=<sp/>tensor[...,<sp/>ind]<sp/>-<sp/>tensor[...,<sp/>ind+2]<sp/>/<sp/>2.0<sp/></highlight><highlight class="comment">#<sp/>Set<sp/>xmin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor1[...,<sp/>ind+1]<sp/>=<sp/>tensor[...,<sp/>ind]<sp/>+<sp/>tensor[...,<sp/>ind+2]<sp/>/<sp/>2.0<sp/></highlight><highlight class="comment">#<sp/>Set<sp/>xmax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor1[...,<sp/>ind+2]<sp/>=<sp/>tensor[...,<sp/>ind+1]<sp/>-<sp/>tensor[...,<sp/>ind+3]<sp/>/<sp/>2.0<sp/></highlight><highlight class="comment">#<sp/>Set<sp/>ymin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor1[...,<sp/>ind+3]<sp/>=<sp/>tensor[...,<sp/>ind+1]<sp/>+<sp/>tensor[...,<sp/>ind+3]<sp/>/<sp/>2.0<sp/></highlight><highlight class="comment">#<sp/>Set<sp/>ymax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>conversion<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;corners2centroids&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor1[...,<sp/>ind]<sp/>=<sp/>(tensor[...,<sp/>ind]<sp/>+<sp/>tensor[...,<sp/>ind+2])<sp/>/<sp/>2.0<sp/></highlight><highlight class="comment">#<sp/>Set<sp/>cx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor1[...,<sp/>ind+1]<sp/>=<sp/>(tensor[...,<sp/>ind+1]<sp/>+<sp/>tensor[...,<sp/>ind+3])<sp/>/<sp/>2.0<sp/></highlight><highlight class="comment">#<sp/>Set<sp/>cy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor1[...,<sp/>ind+2]<sp/>=<sp/>tensor[...,<sp/>ind+2]<sp/>-<sp/>tensor[...,<sp/>ind]<sp/></highlight><highlight class="comment">#<sp/>Set<sp/>w</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor1[...,<sp/>ind+3]<sp/>=<sp/>tensor[...,<sp/>ind+3]<sp/>-<sp/>tensor[...,<sp/>ind+1]<sp/></highlight><highlight class="comment">#<sp/>Set<sp/>h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>conversion<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;centroids2corners&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor1[...,<sp/>ind]<sp/>=<sp/>tensor[...,<sp/>ind]<sp/>-<sp/>tensor[...,<sp/>ind+2]<sp/>/<sp/>2.0<sp/></highlight><highlight class="comment">#<sp/>Set<sp/>xmin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor1[...,<sp/>ind+1]<sp/>=<sp/>tensor[...,<sp/>ind+1]<sp/>-<sp/>tensor[...,<sp/>ind+3]<sp/>/<sp/>2.0<sp/></highlight><highlight class="comment">#<sp/>Set<sp/>ymin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor1[...,<sp/>ind+2]<sp/>=<sp/>tensor[...,<sp/>ind]<sp/>+<sp/>tensor[...,<sp/>ind+2]<sp/>/<sp/>2.0<sp/></highlight><highlight class="comment">#<sp/>Set<sp/>xmax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor1[...,<sp/>ind+3]<sp/>=<sp/>tensor[...,<sp/>ind+1]<sp/>+<sp/>tensor[...,<sp/>ind+3]<sp/>/<sp/>2.0<sp/></highlight><highlight class="comment">#<sp/>Set<sp/>ymax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>(conversion<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;minmax2corners&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>(conversion<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;corners2minmax&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor1[...,<sp/>ind+1]<sp/>=<sp/>tensor[...,<sp/>ind+2]</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor1[...,<sp/>ind+2]<sp/>=<sp/>tensor[...,<sp/>ind+1]</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Unexpected<sp/>conversion<sp/>value.<sp/>Supported<sp/>values<sp/>are<sp/>&apos;minmax2centroids&apos;,<sp/>&apos;centroids2minmax&apos;,<sp/>&apos;corners2centroids&apos;,<sp/>&apos;centroids2corners&apos;,<sp/>&apos;minmax2corners&apos;,<sp/>and<sp/>&apos;corners2minmax&apos;.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor1</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="namespacekeras__utils_1_1bounding__box__utils_1a924087a3e5b888d700dbff75254f370b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacekeras__utils_1_1bounding__box__utils_1a924087a3e5b888d700dbff75254f370b" kindref="member">convert_coordinates2</ref>(tensor,<sp/>start_index,<sp/>conversion):</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>matrix<sp/>multiplication<sp/>implementation<sp/>of<sp/>`convert_coordinates()`.</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Supports<sp/>only<sp/>conversion<sp/>between<sp/>the<sp/>&apos;centroids&apos;<sp/>and<sp/>&apos;minmax&apos;<sp/>formats.</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>function<sp/>is<sp/>marginally<sp/>slower<sp/>on<sp/>average<sp/>than<sp/>`convert_coordinates()`,</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>probably<sp/>because<sp/>it<sp/>involves<sp/>more<sp/>(unnecessary)<sp/>arithmetic<sp/>operations<sp/>(unnecessary</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>because<sp/>the<sp/>two<sp/>matrices<sp/>are<sp/>sparse).</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>For<sp/>details<sp/>please<sp/>refer<sp/>to<sp/>the<sp/>documentation<sp/>of<sp/>`convert_coordinates()`.</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>ind<sp/>=<sp/>start_index</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>tensor1<sp/>=<sp/>np.copy(tensor).astype(np.float)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>conversion<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;minmax2centroids&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M<sp/>=<sp/>np.array([[0.5,<sp/>0.<sp/>,<sp/>-1.,<sp/><sp/>0.],</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0.5,<sp/>0.<sp/>,<sp/><sp/>1.,<sp/><sp/>0.],</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0.<sp/>,<sp/>0.5,<sp/><sp/>0.,<sp/>-1.],</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0.<sp/>,<sp/>0.5,<sp/><sp/>0.,<sp/><sp/>1.]])</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor1[...,<sp/>ind:ind+4]<sp/>=<sp/>np.dot(tensor1[...,<sp/>ind:ind+4],<sp/>M)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>conversion<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;centroids2minmax&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M<sp/>=<sp/>np.array([[<sp/>1.<sp/>,<sp/>1.<sp/>,<sp/><sp/>0.<sp/>,<sp/>0.<sp/>],</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<sp/>0.<sp/>,<sp/>0.<sp/>,<sp/><sp/>1.<sp/>,<sp/>1.<sp/>],</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[-0.5,<sp/>0.5,<sp/><sp/>0.<sp/>,<sp/>0.<sp/>],</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<sp/>0.<sp/>,<sp/>0.<sp/>,<sp/>-0.5,<sp/>0.5]])<sp/></highlight><highlight class="comment">#<sp/>The<sp/>multiplicative<sp/>inverse<sp/>of<sp/>the<sp/>matrix<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor1[...,<sp/>ind:ind+4]<sp/>=<sp/>np.dot(tensor1[...,<sp/>ind:ind+4],<sp/>M)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Unexpected<sp/>conversion<sp/>value.<sp/>Supported<sp/>values<sp/>are<sp/>&apos;minmax2centroids&apos;<sp/>and<sp/>&apos;centroids2minmax&apos;.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor1</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="namespacekeras__utils_1_1bounding__box__utils_1a91ddfb47dfc8b356861c2a04950b7913" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacekeras__utils_1_1bounding__box__utils_1a91ddfb47dfc8b356861c2a04950b7913" kindref="member">intersection_area</ref>(boxes1,<sp/>boxes2,<sp/>coords=&apos;centroids&apos;,<sp/>mode=&apos;outer_product&apos;):</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Computes<sp/>the<sp/>intersection<sp/>areas<sp/>of<sp/>two<sp/>sets<sp/>of<sp/>axis-aligned<sp/>2D<sp/>rectangular<sp/>boxes.</highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Let<sp/>`boxes1`<sp/>and<sp/>`boxes2`<sp/>contain<sp/>`m`<sp/>and<sp/>`n`<sp/>boxes,<sp/>respectively.</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>In<sp/>&apos;outer_product&apos;<sp/>mode,<sp/>returns<sp/>an<sp/>`(m,n)`<sp/>matrix<sp/>with<sp/>the<sp/>intersection<sp/>areas<sp/>for<sp/>all<sp/>possible</highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>combinations<sp/>of<sp/>the<sp/>boxes<sp/>in<sp/>`boxes1`<sp/>and<sp/>`boxes2`.</highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>In<sp/>&apos;element-wise&apos;<sp/>mode,<sp/>`m`<sp/>and<sp/>`n`<sp/>must<sp/>be<sp/>broadcast-compatible.<sp/>Refer<sp/>to<sp/>the<sp/>explanation</highlight></codeline>
<codeline lineno="118"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>of<sp/>the<sp/>`mode`<sp/>argument<sp/>for<sp/>details.</highlight></codeline>
<codeline lineno="119"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="120"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Arguments:</highlight></codeline>
<codeline lineno="121"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes1<sp/>(array):<sp/>Either<sp/>a<sp/>1D<sp/>Numpy<sp/>array<sp/>of<sp/>shape<sp/>`(4,<sp/>)`<sp/>containing<sp/>the<sp/>coordinates<sp/>for<sp/>one<sp/>box<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="122"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>specified<sp/>by<sp/>`coords`<sp/>or<sp/>a<sp/>2D<sp/>Numpy<sp/>array<sp/>of<sp/>shape<sp/>`(m,<sp/>4)`<sp/>containing<sp/>the<sp/>coordinates<sp/>for<sp/>`m`<sp/>boxes.</highlight></codeline>
<codeline lineno="123"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>`mode`<sp/>is<sp/>set<sp/>to<sp/>&apos;element_wise&apos;,<sp/>the<sp/>shape<sp/>must<sp/>be<sp/>broadcast-compatible<sp/>with<sp/>`boxes2`.</highlight></codeline>
<codeline lineno="124"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes2<sp/>(array):<sp/>Either<sp/>a<sp/>1D<sp/>Numpy<sp/>array<sp/>of<sp/>shape<sp/>`(4,<sp/>)`<sp/>containing<sp/>the<sp/>coordinates<sp/>for<sp/>one<sp/>box<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>specified<sp/>by<sp/>`coords`<sp/>or<sp/>a<sp/>2D<sp/>Numpy<sp/>array<sp/>of<sp/>shape<sp/>`(n,<sp/>4)`<sp/>containing<sp/>the<sp/>coordinates<sp/>for<sp/>`n`<sp/>boxes.</highlight></codeline>
<codeline lineno="126"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>`mode`<sp/>is<sp/>set<sp/>to<sp/>&apos;element_wise&apos;,<sp/>the<sp/>shape<sp/>must<sp/>be<sp/>broadcast-compatible<sp/>with<sp/>`boxes1`.</highlight></codeline>
<codeline lineno="127"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords<sp/>(str,<sp/>optional):<sp/>The<sp/>coordinate<sp/>format<sp/>in<sp/>the<sp/>input<sp/>arrays.<sp/>Can<sp/>be<sp/>either<sp/>&apos;centroids&apos;<sp/>for<sp/>the<sp/>format</highlight></codeline>
<codeline lineno="128"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`(cx,<sp/>cy,<sp/>w,<sp/>h)`,<sp/>&apos;minmax&apos;<sp/>for<sp/>the<sp/>format<sp/>`(xmin,<sp/>xmax,<sp/>ymin,<sp/>ymax)`,<sp/>or<sp/>&apos;corners&apos;<sp/>for<sp/>the<sp/>format</highlight></codeline>
<codeline lineno="129"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`(xmin,<sp/>ymin,<sp/>xmax,<sp/>ymax)`.</highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/>(str,<sp/>optional):<sp/>Can<sp/>be<sp/>one<sp/>of<sp/>&apos;outer_product&apos;<sp/>and<sp/>&apos;element-wise&apos;.<sp/>In<sp/>&apos;outer_product&apos;<sp/>mode,<sp/>returns<sp/>an</highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`(m,n)`<sp/>matrix<sp/>with<sp/>the<sp/>intersection<sp/>areas<sp/>for<sp/>all<sp/>possible<sp/>combinations<sp/>of<sp/>the<sp/>`m`<sp/>boxes<sp/>in<sp/>`boxes1`<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`n`<sp/>boxes<sp/>in<sp/>`boxes2`.<sp/>In<sp/>&apos;element-wise&apos;<sp/>mode,<sp/>returns<sp/>a<sp/>1D<sp/>array<sp/>and<sp/>the<sp/>shapes<sp/>of<sp/>`boxes1`<sp/>and<sp/>`boxes2`</highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>must<sp/>be<sp/>boadcast-compatible.<sp/>If<sp/>both<sp/>`boxes1`<sp/>and<sp/>`boxes2`<sp/>have<sp/>`m`<sp/>boxes,<sp/>then<sp/>this<sp/>returns<sp/>an<sp/>array<sp/>of</highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>`m`<sp/>where<sp/>the<sp/>i-th<sp/>position<sp/>contains<sp/>the<sp/>intersection<sp/>area<sp/>of<sp/>`boxes1[i]`<sp/>with<sp/>`boxes2[i]`.</highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="137"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>1D<sp/>or<sp/>2D<sp/>Numpy<sp/>array<sp/>(refer<sp/>to<sp/>the<sp/>`mode`<sp/>argument<sp/>for<sp/>details)<sp/>of<sp/>dtype<sp/>float<sp/>containing<sp/>values<sp/>with</highlight></codeline>
<codeline lineno="138"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>intersection<sp/>areas<sp/>of<sp/>the<sp/>boxes<sp/>in<sp/>`boxes1`<sp/>and<sp/>`boxes2`.</highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Make<sp/>sure<sp/>the<sp/>boxes<sp/>have<sp/>the<sp/>right<sp/>shapes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>boxes1.ndim<sp/>&gt;<sp/>2:<sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;boxes1<sp/>must<sp/>have<sp/>rank<sp/>either<sp/>1<sp/>or<sp/>2,<sp/>but<sp/>has<sp/>rank<sp/>{}.&quot;</highlight><highlight class="normal">.format(boxes1.ndim))</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>boxes2.ndim<sp/>&gt;<sp/>2:<sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;boxes2<sp/>must<sp/>have<sp/>rank<sp/>either<sp/>1<sp/>or<sp/>2,<sp/>but<sp/>has<sp/>rank<sp/>{}.&quot;</highlight><highlight class="normal">.format(boxes2.ndim))</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>boxes1.ndim<sp/>==<sp/>1:<sp/>boxes1<sp/>=<sp/>np.expand_dims(boxes1,<sp/>axis=0)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>boxes2.ndim<sp/>==<sp/>1:<sp/>boxes2<sp/>=<sp/>np.expand_dims(boxes2,<sp/>axis=0)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>(boxes1.shape[1]<sp/>==<sp/>boxes2.shape[1]<sp/>==<sp/>4):<sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;All<sp/>boxes<sp/>must<sp/>consist<sp/>of<sp/>4<sp/>coordinates,<sp/>but<sp/>the<sp/>boxes<sp/>in<sp/>`boxes1`<sp/>and<sp/>`boxes2`<sp/>have<sp/>{}<sp/>and<sp/>{}<sp/>coordinates,<sp/>respectively.&quot;</highlight><highlight class="normal">.format(boxes1.shape[1],<sp/>boxes2.shape[1]))</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>mode<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>{</highlight><highlight class="stringliteral">&apos;outer_product&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;element-wise&apos;</highlight><highlight class="normal">}:<sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;`mode`<sp/>must<sp/>be<sp/>one<sp/>of<sp/>&apos;outer_product&apos;<sp/>and<sp/>&apos;element-wise&apos;,<sp/>but<sp/>got<sp/>&apos;{}&apos;.&quot;</highlight><highlight class="normal">,format(mode))</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Convert<sp/>the<sp/>coordinates<sp/>if<sp/>necessary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>coords<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;centroids&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes1<sp/>=<sp/><ref refid="namespacekeras__utils_1_1bounding__box__utils_1a7b2a9d86d4acfcddcec55133486f2012" kindref="member">convert_coordinates</ref>(boxes1,<sp/>start_index=0,<sp/>conversion=</highlight><highlight class="stringliteral">&apos;centroids2corners&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes2<sp/>=<sp/><ref refid="namespacekeras__utils_1_1bounding__box__utils_1a7b2a9d86d4acfcddcec55133486f2012" kindref="member">convert_coordinates</ref>(boxes2,<sp/>start_index=0,<sp/>conversion=</highlight><highlight class="stringliteral">&apos;centroids2corners&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;corners&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>(coords<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>{</highlight><highlight class="stringliteral">&apos;minmax&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;corners&apos;</highlight><highlight class="normal">}):</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Unexpected<sp/>value<sp/>for<sp/>`coords`.<sp/>Supported<sp/>values<sp/>are<sp/>&apos;minmax&apos;,<sp/>&apos;corners&apos;<sp/>and<sp/>&apos;centroids&apos;.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>boxes1.shape[0]<sp/></highlight><highlight class="comment">#<sp/>The<sp/>number<sp/>of<sp/>boxes<sp/>in<sp/>`boxes1`</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>boxes2.shape[0]<sp/></highlight><highlight class="comment">#<sp/>The<sp/>number<sp/>of<sp/>boxes<sp/>in<sp/>`boxes2`</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>the<sp/>correct<sp/>coordinate<sp/>indices<sp/>for<sp/>the<sp/>respective<sp/>formats.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>coords<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;corners&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmin<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ymin<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmax<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ymax<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>coords<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;minmax&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmin<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmax<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ymin<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ymax<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>the<sp/>intersection<sp/>areas.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>mode<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;outer_product&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>For<sp/>all<sp/>possible<sp/>box<sp/>combinations,<sp/>get<sp/>the<sp/>greater<sp/>xmin<sp/>and<sp/>ymin<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>is<sp/>a<sp/>tensor<sp/>of<sp/>shape<sp/>(m,n,2).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_xy<sp/>=<sp/>np.maximum(np.tile(np.expand_dims(boxes1[:,[xmin,ymin]],<sp/>axis=1),<sp/>reps=(1,<sp/>n,<sp/>1)),</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.tile(np.expand_dims(boxes2[:,[xmin,ymin]],<sp/>axis=0),<sp/>reps=(m,<sp/>1,<sp/>1)))</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>For<sp/>all<sp/>possible<sp/>box<sp/>combinations,<sp/>get<sp/>the<sp/>smaller<sp/>xmax<sp/>and<sp/>ymax<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>is<sp/>a<sp/>tensor<sp/>of<sp/>shape<sp/>(m,n,2).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_xy<sp/>=<sp/>np.minimum(np.tile(np.expand_dims(boxes1[:,[xmax,ymax]],<sp/>axis=1),<sp/>reps=(1,<sp/>n,<sp/>1)),</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.tile(np.expand_dims(boxes2[:,[xmax,ymax]],<sp/>axis=0),<sp/>reps=(m,<sp/>1,<sp/>1)))</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>the<sp/>side<sp/>lengths<sp/>of<sp/>the<sp/>intersection<sp/>rectangles.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>side_lengths<sp/>=<sp/>np.maximum(0,<sp/>max_xy<sp/>-<sp/>min_xy)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>side_lengths[:,:,0]<sp/>*<sp/>side_lengths[:,:,1]</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>mode<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;element-wise&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_xy<sp/>=<sp/>np.maximum(boxes1[:,[xmin,ymin]],<sp/>boxes2[:,[xmin,ymin]])</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_xy<sp/>=<sp/>np.minimum(boxes1[:,[xmax,ymax]],<sp/>boxes2[:,[xmax,ymax]])</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>the<sp/>side<sp/>lengths<sp/>of<sp/>the<sp/>intersection<sp/>rectangles.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>side_lengths<sp/>=<sp/>np.maximum(0,<sp/>max_xy<sp/>-<sp/>min_xy)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>side_lengths[:,0]<sp/>*<sp/>side_lengths[:,1]</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="namespacekeras__utils_1_1bounding__box__utils_1a61242ff96fe1b973d428544abdbfed53" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacekeras__utils_1_1bounding__box__utils_1a61242ff96fe1b973d428544abdbfed53" kindref="member">intersection_area_</ref>(boxes1,<sp/>boxes2,<sp/>coords=&apos;corners&apos;,<sp/>mode=&apos;outer_product&apos;):</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="205"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>same<sp/>as<sp/>&apos;intersection_area()&apos;<sp/>but<sp/>for<sp/>internal<sp/>use,<sp/>i.e.<sp/>without<sp/>all<sp/>the<sp/>safety<sp/>checks.</highlight></codeline>
<codeline lineno="206"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>boxes1.shape[0]<sp/></highlight><highlight class="comment">#<sp/>The<sp/>number<sp/>of<sp/>boxes<sp/>in<sp/>`boxes1`</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>boxes2.shape[0]<sp/></highlight><highlight class="comment">#<sp/>The<sp/>number<sp/>of<sp/>boxes<sp/>in<sp/>`boxes2`</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>the<sp/>correct<sp/>coordinate<sp/>indices<sp/>for<sp/>the<sp/>respective<sp/>formats.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>coords<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;corners&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmin<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ymin<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmax<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ymax<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>coords<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;minmax&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmin<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmax<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ymin<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ymax<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>the<sp/>intersection<sp/>areas.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>mode<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;outer_product&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>For<sp/>all<sp/>possible<sp/>box<sp/>combinations,<sp/>get<sp/>the<sp/>greater<sp/>xmin<sp/>and<sp/>ymin<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>is<sp/>a<sp/>tensor<sp/>of<sp/>shape<sp/>(m,n,2).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_xy<sp/>=<sp/>np.maximum(np.tile(np.expand_dims(boxes1[:,[xmin,ymin]],<sp/>axis=1),<sp/>reps=(1,<sp/>n,<sp/>1)),</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.tile(np.expand_dims(boxes2[:,[xmin,ymin]],<sp/>axis=0),<sp/>reps=(m,<sp/>1,<sp/>1)))</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>For<sp/>all<sp/>possible<sp/>box<sp/>combinations,<sp/>get<sp/>the<sp/>smaller<sp/>xmax<sp/>and<sp/>ymax<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>is<sp/>a<sp/>tensor<sp/>of<sp/>shape<sp/>(m,n,2).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_xy<sp/>=<sp/>np.minimum(np.tile(np.expand_dims(boxes1[:,[xmax,ymax]],<sp/>axis=1),<sp/>reps=(1,<sp/>n,<sp/>1)),</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.tile(np.expand_dims(boxes2[:,[xmax,ymax]],<sp/>axis=0),<sp/>reps=(m,<sp/>1,<sp/>1)))</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>the<sp/>side<sp/>lengths<sp/>of<sp/>the<sp/>intersection<sp/>rectangles.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>side_lengths<sp/>=<sp/>np.maximum(0,<sp/>max_xy<sp/>-<sp/>min_xy)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>side_lengths[:,:,0]<sp/>*<sp/>side_lengths[:,:,1]</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>mode<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;element-wise&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_xy<sp/>=<sp/>np.maximum(boxes1[:,[xmin,ymin]],<sp/>boxes2[:,[xmin,ymin]])</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_xy<sp/>=<sp/>np.minimum(boxes1[:,[xmax,ymax]],<sp/>boxes2[:,[xmax,ymax]])</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>the<sp/>side<sp/>lengths<sp/>of<sp/>the<sp/>intersection<sp/>rectangles.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>side_lengths<sp/>=<sp/>np.maximum(0,<sp/>max_xy<sp/>-<sp/>min_xy)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>side_lengths[:,0]<sp/>*<sp/>side_lengths[:,1]</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="namespacekeras__utils_1_1bounding__box__utils_1a2aa9711828ff2fd23f2769c95bfa3b52" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacekeras__utils_1_1bounding__box__utils_1a2aa9711828ff2fd23f2769c95bfa3b52" kindref="member">iou</ref>(boxes1,<sp/>boxes2,<sp/>coords=&apos;centroids&apos;,<sp/>mode=&apos;outer_product&apos;):</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="255"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Computes<sp/>the<sp/>intersection-over-union<sp/>similarity<sp/>(also<sp/>known<sp/>as<sp/>Jaccard<sp/>similarity)</highlight></codeline>
<codeline lineno="256"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>of<sp/>two<sp/>sets<sp/>of<sp/>axis-aligned<sp/>2D<sp/>rectangular<sp/>boxes.</highlight></codeline>
<codeline lineno="257"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="258"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Let<sp/>`boxes1`<sp/>and<sp/>`boxes2`<sp/>contain<sp/>`m`<sp/>and<sp/>`n`<sp/>boxes,<sp/>respectively.</highlight></codeline>
<codeline lineno="259"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="260"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>In<sp/>&apos;outer_product&apos;<sp/>mode,<sp/>returns<sp/>an<sp/>`(m,n)`<sp/>matrix<sp/>with<sp/>the<sp/>IoUs<sp/>for<sp/>all<sp/>possible</highlight></codeline>
<codeline lineno="261"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>combinations<sp/>of<sp/>the<sp/>boxes<sp/>in<sp/>`boxes1`<sp/>and<sp/>`boxes2`.</highlight></codeline>
<codeline lineno="262"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="263"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>In<sp/>&apos;element-wise&apos;<sp/>mode,<sp/>`m`<sp/>and<sp/>`n`<sp/>must<sp/>be<sp/>broadcast-compatible.<sp/>Refer<sp/>to<sp/>the<sp/>explanation</highlight></codeline>
<codeline lineno="264"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>of<sp/>the<sp/>`mode`<sp/>argument<sp/>for<sp/>details.</highlight></codeline>
<codeline lineno="265"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="266"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Arguments:</highlight></codeline>
<codeline lineno="267"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes1<sp/>(array):<sp/>Either<sp/>a<sp/>1D<sp/>Numpy<sp/>array<sp/>of<sp/>shape<sp/>`(4,<sp/>)`<sp/>containing<sp/>the<sp/>coordinates<sp/>for<sp/>one<sp/>box<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="268"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>specified<sp/>by<sp/>`coords`<sp/>or<sp/>a<sp/>2D<sp/>Numpy<sp/>array<sp/>of<sp/>shape<sp/>`(m,<sp/>4)`<sp/>containing<sp/>the<sp/>coordinates<sp/>for<sp/>`m`<sp/>boxes.</highlight></codeline>
<codeline lineno="269"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>`mode`<sp/>is<sp/>set<sp/>to<sp/>&apos;element_wise&apos;,<sp/>the<sp/>shape<sp/>must<sp/>be<sp/>broadcast-compatible<sp/>with<sp/>`boxes2`.</highlight></codeline>
<codeline lineno="270"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes2<sp/>(array):<sp/>Either<sp/>a<sp/>1D<sp/>Numpy<sp/>array<sp/>of<sp/>shape<sp/>`(4,<sp/>)`<sp/>containing<sp/>the<sp/>coordinates<sp/>for<sp/>one<sp/>box<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="271"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>specified<sp/>by<sp/>`coords`<sp/>or<sp/>a<sp/>2D<sp/>Numpy<sp/>array<sp/>of<sp/>shape<sp/>`(n,<sp/>4)`<sp/>containing<sp/>the<sp/>coordinates<sp/>for<sp/>`n`<sp/>boxes.</highlight></codeline>
<codeline lineno="272"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>`mode`<sp/>is<sp/>set<sp/>to<sp/>&apos;element_wise&apos;,<sp/>the<sp/>shape<sp/>must<sp/>be<sp/>broadcast-compatible<sp/>with<sp/>`boxes1`.</highlight></codeline>
<codeline lineno="273"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords<sp/>(str,<sp/>optional):<sp/>The<sp/>coordinate<sp/>format<sp/>in<sp/>the<sp/>input<sp/>arrays.<sp/>Can<sp/>be<sp/>either<sp/>&apos;centroids&apos;<sp/>for<sp/>the<sp/>format</highlight></codeline>
<codeline lineno="274"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`(cx,<sp/>cy,<sp/>w,<sp/>h)`,<sp/>&apos;minmax&apos;<sp/>for<sp/>the<sp/>format<sp/>`(xmin,<sp/>xmax,<sp/>ymin,<sp/>ymax)`,<sp/>or<sp/>&apos;corners&apos;<sp/>for<sp/>the<sp/>format</highlight></codeline>
<codeline lineno="275"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`(xmin,<sp/>ymin,<sp/>xmax,<sp/>ymax)`.</highlight></codeline>
<codeline lineno="276"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/>(str,<sp/>optional):<sp/>Can<sp/>be<sp/>one<sp/>of<sp/>&apos;outer_product&apos;<sp/>and<sp/>&apos;element-wise&apos;.<sp/>In<sp/>&apos;outer_product&apos;<sp/>mode,<sp/>returns<sp/>an</highlight></codeline>
<codeline lineno="277"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`(m,n)`<sp/>matrix<sp/>with<sp/>the<sp/>IoU<sp/>overlaps<sp/>for<sp/>all<sp/>possible<sp/>combinations<sp/>of<sp/>the<sp/>`m`<sp/>boxes<sp/>in<sp/>`boxes1`<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="278"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`n`<sp/>boxes<sp/>in<sp/>`boxes2`.<sp/>In<sp/>&apos;element-wise&apos;<sp/>mode,<sp/>returns<sp/>a<sp/>1D<sp/>array<sp/>and<sp/>the<sp/>shapes<sp/>of<sp/>`boxes1`<sp/>and<sp/>`boxes2`</highlight></codeline>
<codeline lineno="279"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>must<sp/>be<sp/>boadcast-compatible.<sp/>If<sp/>both<sp/>`boxes1`<sp/>and<sp/>`boxes2`<sp/>have<sp/>`m`<sp/>boxes,<sp/>then<sp/>this<sp/>returns<sp/>an<sp/>array<sp/>of</highlight></codeline>
<codeline lineno="280"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>`m`<sp/>where<sp/>the<sp/>i-th<sp/>position<sp/>contains<sp/>the<sp/>IoU<sp/>overlap<sp/>of<sp/>`boxes1[i]`<sp/>with<sp/>`boxes2[i]`.</highlight></codeline>
<codeline lineno="281"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="282"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="283"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>1D<sp/>or<sp/>2D<sp/>Numpy<sp/>array<sp/>(refer<sp/>to<sp/>the<sp/>`mode`<sp/>argument<sp/>for<sp/>details)<sp/>of<sp/>dtype<sp/>float<sp/>containing<sp/>values<sp/>in<sp/>[0,1],</highlight></codeline>
<codeline lineno="284"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>Jaccard<sp/>similarity<sp/>of<sp/>the<sp/>boxes<sp/>in<sp/>`boxes1`<sp/>and<sp/>`boxes2`.<sp/>0<sp/>means<sp/>there<sp/>is<sp/>no<sp/>overlap<sp/>between<sp/>two<sp/>given</highlight></codeline>
<codeline lineno="285"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes,<sp/>1<sp/>means<sp/>their<sp/>coordinates<sp/>are<sp/>identical.</highlight></codeline>
<codeline lineno="286"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Make<sp/>sure<sp/>the<sp/>boxes<sp/>have<sp/>the<sp/>right<sp/>shapes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>boxes1.ndim<sp/>&gt;<sp/>2:<sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;boxes1<sp/>must<sp/>have<sp/>rank<sp/>either<sp/>1<sp/>or<sp/>2,<sp/>but<sp/>has<sp/>rank<sp/>{}.&quot;</highlight><highlight class="normal">.format(boxes1.ndim))</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>boxes2.ndim<sp/>&gt;<sp/>2:<sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;boxes2<sp/>must<sp/>have<sp/>rank<sp/>either<sp/>1<sp/>or<sp/>2,<sp/>but<sp/>has<sp/>rank<sp/>{}.&quot;</highlight><highlight class="normal">.format(boxes2.ndim))</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>boxes1.ndim<sp/>==<sp/>1:<sp/>boxes1<sp/>=<sp/>np.expand_dims(boxes1,<sp/>axis=0)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>boxes2.ndim<sp/>==<sp/>1:<sp/>boxes2<sp/>=<sp/>np.expand_dims(boxes2,<sp/>axis=0)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>(boxes1.shape[1]<sp/>==<sp/>boxes2.shape[1]<sp/>==<sp/>4):<sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;All<sp/>boxes<sp/>must<sp/>consist<sp/>of<sp/>4<sp/>coordinates,<sp/>but<sp/>the<sp/>boxes<sp/>in<sp/>`boxes1`<sp/>and<sp/>`boxes2`<sp/>have<sp/>{}<sp/>and<sp/>{}<sp/>coordinates,<sp/>respectively.&quot;</highlight><highlight class="normal">.format(boxes1.shape[1],<sp/>boxes2.shape[1]))</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>mode<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>{</highlight><highlight class="stringliteral">&apos;outer_product&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;element-wise&apos;</highlight><highlight class="normal">}:<sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;`mode`<sp/>must<sp/>be<sp/>one<sp/>of<sp/>&apos;outer_product&apos;<sp/>and<sp/>&apos;element-wise&apos;,<sp/>but<sp/>got<sp/>&apos;{}&apos;.&quot;</highlight><highlight class="normal">.format(mode))</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Convert<sp/>the<sp/>coordinates<sp/>if<sp/>necessary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>coords<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;centroids&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes1<sp/>=<sp/><ref refid="namespacekeras__utils_1_1bounding__box__utils_1a7b2a9d86d4acfcddcec55133486f2012" kindref="member">convert_coordinates</ref>(boxes1,<sp/>start_index=0,<sp/>conversion=</highlight><highlight class="stringliteral">&apos;centroids2corners&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes2<sp/>=<sp/><ref refid="namespacekeras__utils_1_1bounding__box__utils_1a7b2a9d86d4acfcddcec55133486f2012" kindref="member">convert_coordinates</ref>(boxes2,<sp/>start_index=0,<sp/>conversion=</highlight><highlight class="stringliteral">&apos;centroids2corners&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;corners&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>(coords<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>{</highlight><highlight class="stringliteral">&apos;minmax&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;corners&apos;</highlight><highlight class="normal">}):</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Unexpected<sp/>value<sp/>for<sp/>`coords`.<sp/>Supported<sp/>values<sp/>are<sp/>&apos;minmax&apos;,<sp/>&apos;corners&apos;<sp/>and<sp/>&apos;centroids&apos;.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>the<sp/>IoU.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>the<sp/>interesection<sp/>areas.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>intersection_areas<sp/>=<sp/><ref refid="namespacekeras__utils_1_1bounding__box__utils_1a61242ff96fe1b973d428544abdbfed53" kindref="member">intersection_area_</ref>(boxes1,<sp/>boxes2,<sp/>coords=coords,<sp/>mode=mode)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>boxes1.shape[0]<sp/></highlight><highlight class="comment">#<sp/>The<sp/>number<sp/>of<sp/>boxes<sp/>in<sp/>`boxes1`</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>boxes2.shape[0]<sp/></highlight><highlight class="comment">#<sp/>The<sp/>number<sp/>of<sp/>boxes<sp/>in<sp/>`boxes2`</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>the<sp/>union<sp/>areas.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>the<sp/>correct<sp/>coordinate<sp/>indices<sp/>for<sp/>the<sp/>respective<sp/>formats.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>coords<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;corners&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmin<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ymin<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmax<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ymax<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>coords<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;minmax&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmin<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmax<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ymin<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ymax<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>mode<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;outer_product&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes1_areas<sp/>=<sp/>np.tile(np.expand_dims((boxes1[:,xmax]<sp/>-<sp/>boxes1[:,xmin])<sp/>*<sp/>(boxes1[:,ymax]<sp/>-<sp/>boxes1[:,ymin]),<sp/>axis=1),<sp/>reps=(1,n))</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes2_areas<sp/>=<sp/>np.tile(np.expand_dims((boxes2[:,xmax]<sp/>-<sp/>boxes2[:,xmin])<sp/>*<sp/>(boxes2[:,ymax]<sp/>-<sp/>boxes2[:,ymin]),<sp/>axis=0),<sp/>reps=(m,1))</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>mode<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;element-wise&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes1_areas<sp/>=<sp/>(boxes1[:,xmax]<sp/>-<sp/>boxes1[:,xmin])<sp/>*<sp/>(boxes1[:,ymax]<sp/>-<sp/>boxes1[:,ymin])</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes2_areas<sp/>=<sp/>(boxes2[:,xmax]<sp/>-<sp/>boxes2[:,xmin])<sp/>*<sp/>(boxes2[:,ymax]<sp/>-<sp/>boxes2[:,ymin])</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>union_areas<sp/>=<sp/>boxes1_areas<sp/>+<sp/>boxes2_areas<sp/>-<sp/>intersection_areas</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>intersection_areas<sp/>/<sp/>union_areas</highlight></codeline>
    </programlisting>
    <location file="DeepLearningSuite/DeepLearningSuiteLib/python_modules/keras_utils/bounding_box_utils.py"/>
  </compounddef>
</doxygen>
