<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="glog_test_8cpp" kind="file" language="C++">
    <compoundname>glogTest.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">glog/logging.h</includes>
    <incdepgraph>
      <node id="5803">
        <label>glog/logging.h</label>
      </node>
      <node id="5801">
        <label>DeepLearningSuite/test/GLOG/glogTest.cpp</label>
        <link refid="glog_test_8cpp"/>
        <childnode refid="5802" relation="include">
        </childnode>
        <childnode refid="5803" relation="include">
        </childnode>
      </node>
      <node id="5802">
        <label>iostream</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="glog_test_8cpp_1a32a845ed948f2d5b0d6914fdf7566d74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myFunction</definition>
        <argsstring>()</argsstring>
        <name>myFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DeepLearningSuite/test/GLOG/glogTest.cpp" line="8" column="1" bodyfile="DeepLearningSuite/test/GLOG/glogTest.cpp" bodystart="8" bodyend="11"/>
        <referencedby refid="glog_test_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="glog_test_8cpp" startline="14" endline="45">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="glog_test_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DeepLearningSuite/test/GLOG/glogTest.cpp" line="14" column="1" bodyfile="DeepLearningSuite/test/GLOG/glogTest.cpp" bodystart="14" bodyend="45"/>
        <references refid="glog_test_8cpp_1a32a845ed948f2d5b0d6914fdf7566d74" compoundref="glog_test_8cpp" startline="8" endline="11">myFunction</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>frivas<sp/>on<sp/>18/03/17.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glog/logging.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="glog_test_8cpp_1a32a845ed948f2d5b0d6914fdf7566d74" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="glog_test_8cpp_1a32a845ed948f2d5b0d6914fdf7566d74" kindref="member">myFunction</ref>()<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(ERROR)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fatal<sp/>message&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="glog_test_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="glog_test_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="namespacetensorflow__detect_1ab9f0bcfda000c7664a363cdb90e34c4f" kindref="member">argv</ref>)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>logPath<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/home/frivas/devel/machine-learning/DeepLearningSuite/cmake-build-debug/test/GLOG/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>google::InitGoogleLogging(argv[0]);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>google::SetLogDestination(0,<sp/>std::string(logPath<sp/>+<sp/>&quot;info.log&quot;).c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>google::SetLogDestination(1,<sp/>std::string(logPath<sp/>+<sp/>&quot;warning.log&quot;).c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(google::LogSeverity<sp/>s<sp/>=<sp/>google::WARNING;<sp/>s<sp/>&lt;<sp/>google::NUM_SEVERITIES;<sp/>s++)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>google::SetLogDestination(s,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>google::SetLogDestination(google::INFO,<sp/></highlight><highlight class="stringliteral">&quot;log.log&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>FLAGS_alsologtostderr<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>fLI::FLAGS_max_log_size<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//MB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>fLI::FLAGS_minloglevel=google::ERROR;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(INFO)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Info<sp/>message&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(WARNING)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Warning<sp/>message&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(ERROR)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>message&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glog_test_8cpp_1a32a845ed948f2d5b0d6914fdf7566d74" kindref="member">myFunction</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;no&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_cookies<sp/>=<sp/>11;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_IF(INFO,<sp/>num_cookies<sp/>&gt;<sp/>10)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Got<sp/>lots<sp/>of<sp/>cookies&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>DLOG(INFO)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Debug<sp/>message&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>PCHECK(num_cookies<sp/>==<sp/>4)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Write<sp/>failed!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="DeepLearningSuite/test/GLOG/glogTest.cpp"/>
  </compounddef>
</doxygen>
