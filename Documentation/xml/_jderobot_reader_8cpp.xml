<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_jderobot_reader_8cpp" kind="file" language="C++">
    <compoundname>JderobotReader.cpp</compoundname>
    <includes refid="_jderobot_reader_8h" local="yes">JderobotReader.h</includes>
    <incdepgraph>
      <node id="1833">
        <label>JderobotReader.h</label>
        <link refid="_jderobot_reader_8h"/>
        <childnode refid="1834" relation="include">
        </childnode>
        <childnode refid="1853" relation="include">
        </childnode>
        <childnode refid="1866" relation="include">
        </childnode>
        <childnode refid="1868" relation="include">
        </childnode>
        <childnode refid="1854" relation="include">
        </childnode>
        <childnode refid="1852" relation="include">
        </childnode>
      </node>
      <node id="1864">
        <label>iomanip</label>
      </node>
      <node id="1840">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="1847">
        <label>maskApi.h</label>
        <link refid="mask_api_8h"/>
      </node>
      <node id="1868">
        <label>comm/cameraClient.hpp</label>
        <link refid="camera_client_8hpp"/>
        <childnode refid="1869" relation="include">
        </childnode>
        <childnode refid="1871" relation="include">
        </childnode>
        <childnode refid="1867" relation="include">
        </childnode>
        <childnode refid="1866" relation="include">
        </childnode>
        <childnode refid="1876" relation="include">
        </childnode>
      </node>
      <node id="1852">
        <label>glog/logging.h</label>
      </node>
      <node id="1845">
        <label>Regions/RleRegions.h</label>
        <link refid="_rle_regions_8h"/>
        <childnode refid="1838" relation="include">
        </childnode>
        <childnode refid="1839" relation="include">
        </childnode>
        <childnode refid="1846" relation="include">
        </childnode>
      </node>
      <node id="1875">
        <label>uncopyable.h</label>
        <link refid="uncopyable_8h"/>
      </node>
      <node id="1837">
        <label>Regions/RectRegions.h</label>
        <link refid="_rect_regions_8h"/>
        <childnode refid="1838" relation="include">
        </childnode>
        <childnode refid="1839" relation="include">
        </childnode>
        <childnode refid="1841" relation="include">
        </childnode>
        <childnode refid="1842" relation="include">
        </childnode>
      </node>
      <node id="1860">
        <label>boost/algorithm/string/classification.hpp</label>
      </node>
      <node id="1839">
        <label>Regions.h</label>
        <link refid="_regions_8h"/>
        <childnode refid="1838" relation="include">
        </childnode>
        <childnode refid="1840" relation="include">
        </childnode>
      </node>
      <node id="1870">
        <label>opencv2/core/core.hpp</label>
      </node>
      <node id="1863">
        <label>config/properties.hpp</label>
        <link refid="properties_8hpp"/>
        <childnode refid="1856" relation="include">
        </childnode>
        <childnode refid="1864" relation="include">
        </childnode>
        <childnode refid="1865" relation="include">
        </childnode>
        <childnode refid="1835" relation="include">
        </childnode>
        <childnode refid="1850" relation="include">
        </childnode>
        <childnode refid="1854" relation="include">
        </childnode>
        <childnode refid="1857" relation="include">
        </childnode>
      </node>
      <node id="1838">
        <label>opencv2/opencv.hpp</label>
      </node>
      <node id="1835">
        <label>string</label>
      </node>
      <node id="1848">
        <label>Common/EvalMatrix.h</label>
        <link refid="_eval_matrix_8h"/>
        <childnode refid="1849" relation="include">
        </childnode>
        <childnode refid="1851" relation="include">
        </childnode>
      </node>
      <node id="1851">
        <label>map</label>
      </node>
      <node id="1872">
        <label>imagecv.h</label>
        <link refid="imagecv_8h"/>
        <childnode refid="1870" relation="include">
        </childnode>
        <childnode refid="1873" relation="include">
        </childnode>
        <childnode refid="1850" relation="include">
        </childnode>
        <childnode refid="1856" relation="include">
        </childnode>
        <childnode refid="1874" relation="include">
        </childnode>
        <childnode refid="1875" relation="include">
        </childnode>
      </node>
      <node id="1843">
        <label>Regions/ContourRegions.h</label>
        <link refid="_contour_regions_8h"/>
        <childnode refid="1838" relation="include">
        </childnode>
        <childnode refid="1839" relation="include">
        </childnode>
        <childnode refid="1844" relation="include">
        </childnode>
      </node>
      <node id="1873">
        <label>exception</label>
      </node>
      <node id="1853">
        <label>config/config.h</label>
        <link refid="config_8h"/>
        <childnode refid="1854" relation="include">
        </childnode>
        <childnode refid="1855" relation="include">
        </childnode>
        <childnode refid="1863" relation="include">
        </childnode>
      </node>
      <node id="1861">
        <label>fstream</label>
      </node>
      <node id="1854">
        <label>yaml-cpp/yaml.h</label>
      </node>
      <node id="1859">
        <label>boost/algorithm/string/split.hpp</label>
      </node>
      <node id="1869">
        <label>jderobottypes/image.h</label>
        <link refid="image_8h"/>
        <childnode refid="1870" relation="include">
        </childnode>
      </node>
      <node id="1846">
        <label>RleRegion.h</label>
        <link refid="_rle_region_8h"/>
        <childnode refid="1840" relation="include">
        </childnode>
        <childnode refid="1847" relation="include">
        </childnode>
      </node>
      <node id="1857">
        <label>config/stdutils.hpp</label>
        <link refid="stdutils_8hpp"/>
        <childnode refid="1858" relation="include">
        </childnode>
        <childnode refid="1835" relation="include">
        </childnode>
        <childnode refid="1850" relation="include">
        </childnode>
        <childnode refid="1859" relation="include">
        </childnode>
        <childnode refid="1860" relation="include">
        </childnode>
        <childnode refid="1861" relation="include">
        </childnode>
      </node>
      <node id="1836">
        <label>Common/Sample.h</label>
        <link refid="_sample_8h"/>
        <childnode refid="1837" relation="include">
        </childnode>
        <childnode refid="1843" relation="include">
        </childnode>
        <childnode refid="1845" relation="include">
        </childnode>
      </node>
      <node id="1850">
        <label>vector</label>
      </node>
      <node id="1871">
        <label>colorspaces/colorspacesmm.h</label>
        <link refid="colorspacesmm_8h"/>
        <childnode refid="1872" relation="include">
        </childnode>
      </node>
      <node id="1867">
        <label>comm/tools.hpp</label>
        <link refid="tools_8hpp"/>
        <childnode refid="1863" relation="include">
        </childnode>
      </node>
      <node id="1865">
        <label>sstream</label>
      </node>
      <node id="1849">
        <label>Matrix.h</label>
        <link refid="_matrix_8h"/>
        <childnode refid="1850" relation="include">
        </childnode>
      </node>
      <node id="1844">
        <label>ContourRegion.h</label>
        <link refid="_contour_region_8h"/>
        <childnode refid="1838" relation="include">
        </childnode>
        <childnode refid="1840" relation="include">
        </childnode>
      </node>
      <node id="1858">
        <label>cstdlib</label>
      </node>
      <node id="1876">
        <label>comm/interfaces/cameraClient.hpp</label>
        <link refid="interfaces_2camera_client_8hpp"/>
        <childnode refid="1869" relation="include">
        </childnode>
      </node>
      <node id="1856">
        <label>iostream</label>
      </node>
      <node id="1855">
        <label>config/loader.hpp</label>
        <link refid="loader_8hpp"/>
        <childnode refid="1856" relation="include">
        </childnode>
        <childnode refid="1835" relation="include">
        </childnode>
        <childnode refid="1857" relation="include">
        </childnode>
        <childnode refid="1854" relation="include">
        </childnode>
        <childnode refid="1862" relation="include">
        </childnode>
        <childnode refid="1863" relation="include">
        </childnode>
      </node>
      <node id="1841">
        <label>RectRegion.h</label>
        <link refid="_rect_region_8h"/>
        <childnode refid="1838" relation="include">
        </childnode>
      </node>
      <node id="1834">
        <label>DatasetConverters/readers/DatasetReader.h</label>
        <link refid="_dataset_reader_8h"/>
        <childnode refid="1835" relation="include">
        </childnode>
        <childnode refid="1836" relation="include">
        </childnode>
        <childnode refid="1840" relation="include">
        </childnode>
        <childnode refid="1848" relation="include">
        </childnode>
        <childnode refid="1852" relation="include">
        </childnode>
      </node>
      <node id="1832">
        <label>DeepLearningSuite/DeepLearningSuiteLib/DatasetConverters/liveReaders/JderobotReader.cpp</label>
        <link refid="_jderobot_reader_8cpp"/>
        <childnode refid="1833" relation="include">
        </childnode>
      </node>
      <node id="1842">
        <label>algorithm</label>
      </node>
      <node id="1874">
        <label>memory</label>
      </node>
      <node id="1862">
        <label>yaml-cpp/exceptions.h</label>
      </node>
      <node id="1866">
        <label>comm/communicator.hpp</label>
        <link refid="communicator_8hpp"/>
        <childnode refid="1863" relation="include">
        </childnode>
        <childnode refid="1867" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>frivas<sp/>on<sp/>24/02/17.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_jderobot_reader_8h" kindref="compound">JderobotReader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="class_jderobot_reader_1a89dde6b225b901d5b55926437be46d54" refkind="member"><highlight class="normal"><ref refid="class_jderobot_reader_1a89dde6b225b901d5b55926437be46d54" kindref="member">JderobotReader::JderobotReader</ref>(std::map&lt;std::string,<sp/>std::string&gt;*<sp/>deployer_params_map,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="namespaceload_image_1a2d12fe0487467ded88b6007624cbe6c7" kindref="member">path</ref>):<ref refid="class_dataset_reader" kindref="compound">DatasetReader</ref>(true)<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_config_1_1_properties" kindref="compound">Config::Properties</ref><sp/>cfg;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deployer_params_map<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc=2;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacetensorflow__detect_1ab9f0bcfda000c7664a363cdb90e34c4f" kindref="member">argv</ref>[2];</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argv[0]<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)std::string(</highlight><highlight class="stringliteral">&quot;myFakeApp&quot;</highlight><highlight class="normal">).c_str();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argv[1]<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)path.c_str();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg<sp/>=<sp/><ref refid="namespace_config_1a845ed902425e4e06b984e0ecd861fa18" kindref="member">Config::load</ref>(argc,<sp/>argv);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>null&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;::iterator<sp/>iter;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YAML::Node<sp/>rootNode;<sp/><sp/></highlight><highlight class="comment">//<sp/>starts<sp/>out<sp/>as<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YAML::Node<sp/>nodeConfig;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iter<sp/>=<sp/>deployer_params_map-&gt;begin();<sp/>iter<sp/>!=<sp/>deployer_params_map-&gt;end();<sp/>iter++)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>iter-&gt;first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iter-&gt;second<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeConfig[iter-&gt;first.c_str()]<sp/>=<sp/>iter-&gt;second.c_str();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;here&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rootNode[</highlight><highlight class="stringliteral">&quot;Camera&quot;</highlight><highlight class="normal">]<sp/>=<sp/>nodeConfig;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg<sp/>=<sp/><ref refid="class_config_1_1_properties" kindref="compound">Config::Properties</ref>(rootNode);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;done&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;jdrc<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_comm_1_1_communicator" kindref="compound">Comm::Communicator</ref>(cfg);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;camera<sp/>=<sp/><ref refid="namespace_comm_1a488b3721b4d9a501e8cd38388ab30437" kindref="member">Comm::getCameraClient</ref>(jdrc,<sp/></highlight><highlight class="stringliteral">&quot;Camera&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>ex)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(ERROR)<sp/>&lt;&lt;<sp/>ex.what();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Ice::CommunicatorPtr<sp/>ic;</highlight></codeline>
<codeline lineno="53"><highlight class="comment"></highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/>//todo<sp/>hack</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>argc=2;</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/><sp/>char*<sp/>argv[2];</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/>argv[0]<sp/>=<sp/>(char*)std::string(&quot;myFakeApp&quot;).c_str();</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/>argv[1]<sp/>=<sp/>(char*)IceConfigFile.c_str();</highlight></codeline>
<codeline lineno="59"><highlight class="comment"></highlight></codeline>
<codeline lineno="60"><highlight class="comment"></highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/>ic<sp/>=<sp/>EasyIce::initialize(argc,argv);</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/>Ice::ObjectPrx<sp/>base<sp/>=<sp/>ic-&gt;propertyToProxy(&quot;Cameraview.Camera.Proxy&quot;);</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/>Ice::PropertiesPtr<sp/>prop<sp/>=<sp/>ic-&gt;getProperties();</highlight></codeline>
<codeline lineno="64"><highlight class="comment"></highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(0==base)</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw<sp/>&quot;Could<sp/>not<sp/>create<sp/>proxy&quot;;</highlight></codeline>
<codeline lineno="67"><highlight class="comment"></highlight></codeline>
<codeline lineno="68"><highlight class="comment"></highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/>this-&gt;camera<sp/>=<sp/>jderobot::CameraClientPtr<sp/>(new<sp/>jderobot::cameraClient(ic,&quot;Cameraview.Camera.&quot;));</highlight></codeline>
<codeline lineno="70"><highlight class="comment"></highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(!<sp/>this-&gt;camera){</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw<sp/>&quot;Invalid<sp/>proxy&quot;;</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/>this-&gt;camera-&gt;start();</highlight></codeline>
<codeline lineno="75"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="class_jderobot_reader_1aef97b473c11e144fcf07e01c3181269b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_jderobot_reader_1aef97b473c11e144fcf07e01c3181269b" kindref="member">JderobotReader::getNextSample</ref>(<ref refid="struct_sample" kindref="compound">Sample</ref><sp/>&amp;sample)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_jde_robot_types_1_1_image" kindref="compound">JdeRobotTypes::Image</ref><sp/>myImage<sp/>=<sp/>this-&gt;camera-&gt;<ref refid="class_comm_1_1_camera_client_1a1947976aa6b31734b9938091e63782e2" kindref="member">getImage</ref>();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>image<sp/>=<sp/>myImage.<ref refid="class_jde_robot_types_1_1_image_1a00caf819fb206f75e125f9a63f78cb8a" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!image.empty()){</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample.<ref refid="struct_sample_1a64fc306f85a0a1966f5f3b662efe95bb" kindref="member">setSampleID</ref>(std::to_string(++this-&gt;sample_count));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::cvtColor(image,<sp/>image,<sp/>cv::COLOR_RGB2BGR);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample.<ref refid="struct_sample_1a37c84ccbf7cbc37823327da68037c51a" kindref="member">setColorImage</ref>(image);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sample.setDepthImage(image);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;Fetching&quot;<sp/>&lt;&lt;<sp/>&apos;\n&apos;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="DeepLearningSuite/DeepLearningSuiteLib/DatasetConverters/liveReaders/JderobotReader.cpp"/>
  </compounddef>
</doxygen>
