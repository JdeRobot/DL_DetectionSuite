<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="loader_8cpp" kind="file" language="C++">
    <compoundname>loader.cpp</compoundname>
    <includes refid="loader_8hpp" local="no">config/loader.hpp</includes>
    <incdepgraph>
      <node id="5513">
        <label>iomanip</label>
      </node>
      <node id="5500">
        <label>DeepLearningSuite/libs/config/src/loader.cpp</label>
        <link refid="loader_8cpp"/>
        <childnode refid="5501" relation="include">
        </childnode>
      </node>
      <node id="5508">
        <label>boost/algorithm/string/classification.hpp</label>
      </node>
      <node id="5512">
        <label>config/properties.hpp</label>
        <link refid="properties_8hpp"/>
        <childnode refid="5502" relation="include">
        </childnode>
        <childnode refid="5513" relation="include">
        </childnode>
        <childnode refid="5514" relation="include">
        </childnode>
        <childnode refid="5503" relation="include">
        </childnode>
        <childnode refid="5506" relation="include">
        </childnode>
        <childnode refid="5510" relation="include">
        </childnode>
        <childnode refid="5504" relation="include">
        </childnode>
      </node>
      <node id="5503">
        <label>string</label>
      </node>
      <node id="5509">
        <label>fstream</label>
      </node>
      <node id="5510">
        <label>yaml-cpp/yaml.h</label>
      </node>
      <node id="5507">
        <label>boost/algorithm/string/split.hpp</label>
      </node>
      <node id="5504">
        <label>config/stdutils.hpp</label>
        <link refid="stdutils_8hpp"/>
        <childnode refid="5505" relation="include">
        </childnode>
        <childnode refid="5503" relation="include">
        </childnode>
        <childnode refid="5506" relation="include">
        </childnode>
        <childnode refid="5507" relation="include">
        </childnode>
        <childnode refid="5508" relation="include">
        </childnode>
        <childnode refid="5509" relation="include">
        </childnode>
      </node>
      <node id="5506">
        <label>vector</label>
      </node>
      <node id="5514">
        <label>sstream</label>
      </node>
      <node id="5505">
        <label>cstdlib</label>
      </node>
      <node id="5502">
        <label>iostream</label>
      </node>
      <node id="5501">
        <label>config/loader.hpp</label>
        <link refid="loader_8hpp"/>
        <childnode refid="5502" relation="include">
        </childnode>
        <childnode refid="5503" relation="include">
        </childnode>
        <childnode refid="5504" relation="include">
        </childnode>
        <childnode refid="5510" relation="include">
        </childnode>
        <childnode refid="5511" relation="include">
        </childnode>
        <childnode refid="5512" relation="include">
        </childnode>
      </node>
      <node id="5511">
        <label>yaml-cpp/exceptions.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacejderobotconfig">jderobotconfig</innernamespace>
    <innernamespace refid="namespacejderobotconfig_1_1loader">jderobotconfig::loader</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>1997-2015<sp/>JDE<sp/>Developers<sp/>Team</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>http://www.gnu.org/licenses/.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>Authors<sp/>:</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Victor<sp/>Arribas<sp/>Raigadas<sp/>&lt;.varribas.urjc@gmail.com&gt;</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="loader_8hpp" kindref="compound">config/loader.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacejderobotconfig" kindref="compound">jderobotconfig</ref>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">loader{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">std::string</highlight></codeline>
<codeline lineno="27" refid="namespacejderobotconfig_1_1loader_1a521f15425002acf9d87a5857ac38268f" refkind="member"><highlight class="normal"><ref refid="namespacejderobotconfig_1_1loader_1a521f15425002acf9d87a5857ac38268f" kindref="member">findConfigFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename){</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacestd_1ae966385e77759fc59768aa9bc280f3d9" kindref="member">std::fileexists</ref>(filename))</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>filename;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>path_holders[]<sp/>=<sp/>{<ref refid="stdutils_8hpp_1a227cbc6c55ca1410521658bbe3a5ff71" kindref="member">getEnvironmentVariable</ref>(<ref refid="namespacejderobotconfig_1_1loader_1a5b2c5f0990c440ef22a49c12951c6969" kindref="member">CONFIG_PATH_NAME</ref>)};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;2;<sp/>i++){</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path_holders[i].empty())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::string<sp/><ref refid="namespaceload_image_1a2d12fe0487467ded88b6007624cbe6c7" kindref="member">path</ref><sp/>:<sp/><ref refid="namespacestd_1afbda037ce4502f9a197deba4a43bada9" kindref="member">std::split</ref>(path_holders[i],<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceload_image_1a2d12fe0487467ded88b6007624cbe6c7" kindref="member">path</ref>.empty())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>filepath(<ref refid="namespaceload_image_1a2d12fe0487467ded88b6007624cbe6c7" kindref="member">path</ref>+</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">+filename);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacestd_1ae966385e77759fc59768aa9bc280f3d9" kindref="member">std::fileexists</ref>(filepath))</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>filepath;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><ref refid="class_config_1_1_properties" kindref="compound">Config::Properties</ref></highlight></codeline>
<codeline lineno="47" refid="namespacejderobotconfig_1_1loader_1a20d680d49aae952308a601aefca96fa4" refkind="member"><highlight class="normal"><ref refid="namespacejderobotconfig_1_1loader_1a20d680d49aae952308a601aefca96fa4" kindref="member">load</ref>(std::string<sp/>filename){</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>filepath<sp/>=<sp/><ref refid="namespacejderobotconfig_1_1loader_1a521f15425002acf9d87a5857ac38268f" kindref="member">findConfigFile</ref>(filename);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filepath.empty()){</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YAML::Exception<sp/>e(YAML::Mark(),</highlight><highlight class="stringliteral">&quot;jderobot/config/loader.cpp:<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>filepath<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Not<sp/>Found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>e;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>YAML::Node<sp/>nodeConfig<sp/>=<sp/>YAML::LoadFile(filepath);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_config_1_1_properties" kindref="compound">Config::Properties</ref><sp/>config(nodeConfig);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;[Info]<sp/>loaded<sp/>YAML<sp/>Config<sp/>file:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;filepath&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//properties-&gt;setProperty(&quot;Ice.Config&quot;,<sp/>filepath);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>config;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">}}</highlight><highlight class="comment">//NS</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="DeepLearningSuite/libs/config/src/loader.cpp"/>
  </compounddef>
</doxygen>
